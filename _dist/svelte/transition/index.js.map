{"version":3,"file":"index.js","sources":["../../../../../../../../../../program/Javascript/projects/TyphonJS/typhonjs-fvtt-lib/svelte/node_modules/@typhonjs-svelte/lib/src/transition/rotate.js","../../../../../../../../../../program/Javascript/projects/TyphonJS/typhonjs-fvtt-lib/svelte/node_modules/@typhonjs-svelte/lib/src/transition/rotateFade.js","../../../../../../../../../../program/Javascript/projects/TyphonJS/typhonjs-fvtt-lib/svelte/node_modules/@typhonjs-svelte/lib/src/transition/slideFade.js","../../../../../../../../../../program/Javascript/projects/TyphonJS/typhonjs-fvtt-lib/svelte/node_modules/@typhonjs-svelte/lib/src/transition/toAnimation.js","../../../../../../../../../../program/Javascript/projects/TyphonJS/typhonjs-fvtt-lib/svelte/node_modules/@typhonjs-svelte/lib/src/transition/transitionDefaults.js"],"sourcesContent":["import { linear } from 'svelte/easing';\r\n\r\nimport { lerp }   from '@typhonjs-svelte/lib/math';\r\n\r\n/**\r\n * Provides a rotate transition. For options `easing` is applied to to the rotate transition. The default easing is\r\n * linear.\r\n *\r\n * Note: that when reversing the transition that time goes from `1 - 0`, so if specific options are applied for\r\n * rotating out transition then `end` and `initial` are swapped.\r\n *\r\n * @param {HTMLElement} node - The transition node.\r\n *\r\n * @param {object}      options - Optional parameters.\r\n *\r\n * @param {number}      [options.delay] - Delay in ms before start of transition.\r\n *\r\n * @param {number}      [options.duration] - Total transition length in ms.\r\n *\r\n * @param {Function}    [options.easing=linear] - The easing function to apply to the rotate transition.\r\n *\r\n * @param {number}      [options.end=0] - End rotation in degrees.\r\n *\r\n * @param {number}      [options.initial=0] - Initial rotation in degrees.\r\n *\r\n * @returns {{duration: number, css: (function(*=): string), delay: number, easing: (x: number) => number}}\r\n *  Transition object.\r\n */\r\nexport function rotate(node, options)\r\n{\r\n   const easingRotate = options.easing ?? linear;\r\n\r\n   const initialDeg = options.initial ?? 0;\r\n   const endDeg = options.end ?? 0;\r\n\r\n   return {\r\n      delay: options.delay ?? 0,\r\n      duration: options.duration ?? 500,\r\n      easing: linear,\r\n      css: (t) =>\r\n      {\r\n         const rotateT = easingRotate(t);\r\n         return `transform: rotate(${lerp(initialDeg, endDeg, rotateT)}deg)`;\r\n      }\r\n   };\r\n}\r\n","import { fade }   from 'svelte/transition';\r\nimport { linear } from 'svelte/easing';\r\n\r\nimport { lerp }   from '@typhonjs-svelte/lib/math';\r\n\r\n/**\r\n * Combines rotate & fade transitions into a single transition. For options `easing` this is applied to both transitions,\r\n * however if provided `easingRotate` and / or `easingFade` will take precedence. The default easing is linear.\r\n *\r\n * Note: that when reversing the transition that time goes from `1 - 0`, so if specific options are applied for\r\n * rotating out transition then `end` and `initial` are swapped.\r\n *\r\n * @param {HTMLElement} node - The transition node.\r\n *\r\n * @param {object}      options - Optional parameters.\r\n *\r\n * @param {number}      [options.delay] - Delay in ms before start of transition.\r\n *\r\n * @param {number}      [options.duration] - Total transition length in ms.\r\n *\r\n * @param {Function}    [options.easing=linear] - The easing function to apply to both slide & fade transitions.\r\n *\r\n * @param {Function}    [options.easingFade=linear] - The easing function to apply to the fade transition.\r\n *\r\n * @param {Function}    [options.easingRotate=linear] - The easing function to apply to the rotate transition.\r\n *\r\n * @param {number}      [options.end=0] - End rotation in degrees.\r\n *\r\n * @param {number}      [options.initial=0] - Initial rotation in degrees.\r\n *\r\n * @returns {{duration: number, css: (function(*=): string), delay: number, easing: (x: number) => number}}\r\n *  Transition object.\r\n */\r\nexport function rotateFade(node, options)\r\n{\r\n   const easingFade = options.easingFade || options.easing || linear;\r\n   const easingRotate = options.easingRotate || options.easing || linear;\r\n\r\n   const fadeTransition = fade(node);\r\n\r\n   const initialDeg = options.initial ?? 0;\r\n   const endDeg = options.end ?? 0;\r\n\r\n   return {\r\n      delay: options.delay ?? 0,\r\n      duration: options.duration ?? 500,\r\n      easing: linear,\r\n      css: (t) =>\r\n      {\r\n         const fadeT = easingFade(t);\r\n         const rotateT = easingRotate(t);\r\n\r\n         return `transform: rotate(${lerp(initialDeg, endDeg, rotateT)}deg); ${fadeTransition.css(fadeT, 1 - fadeT)}`;\r\n      }\r\n   };\r\n}\r\n","import { fade, slide }  from 'svelte/transition';\r\nimport { linear }       from 'svelte/easing';\r\n\r\n/**\r\n * Combines slide & fade transitions into a single transition. For options `easing` this is applied to both transitions,\r\n * however if provided `easingSlide` and / or `easingFade` will take precedence. The default easing is linear.\r\n *\r\n * @param {HTMLElement} node - The transition node.\r\n *\r\n * @param {object}      options - Optional parameters.\r\n *\r\n * @param {number}      [options.delay] - Delay in ms before start of transition.\r\n *\r\n * @param {number}      [options.duration] - Total transition length in ms.\r\n *\r\n * @param {Function}    [options.easing=linear] - The easing function to apply to both slide & fade transitions.\r\n *\r\n * @param {Function}    [options.easingFade=linear] - The easing function to apply to the fade transition.\r\n *\r\n * @param {Function}    [options.easingSlide=linear] - The easing function to apply to the slide transition.\r\n *\r\n * @returns {{duration: number, css: (function(*=): string), delay: number, easing: (x: number) => number}}\r\n *  Transition object.\r\n */\r\nexport function slideFade(node, options)\r\n{\r\n   const fadeEasing = options.easingFade || options.easing || linear;\r\n   const slideEasing = options.easingSlide || options.easing || linear;\r\n\r\n   const fadeTransition = fade(node);\r\n   const slideTransition = slide(node);\r\n\r\n   return {\r\n      delay: options.delay || 0,\r\n      duration: options.duration || 500,\r\n      easing: linear,\r\n      css: (t) =>\r\n      {\r\n         const fadeT = fadeEasing(t);\r\n         const slideT = slideEasing(t);\r\n         return `${slideTransition.css(slideT, 1 - slideT)}; ${fadeTransition.css(fadeT, 1 - fadeT)}`;\r\n      }\r\n   };\r\n}","/**\r\n * Converts a Svelte transition to an animation. Both transitions & animations use the same CSS / styles solution and\r\n * resulting data so wrap the transition function with the signature of an animation.\r\n *\r\n * @param {(node: Element, params?: object) => import('svelte/transition').TransitionConfig} fn - A Svelte transition\r\n *                                                                                                function.\r\n *\r\n * @returns {(node: Element, { from: DOMRect, to: DOMRect }, params?: object) =>\r\n *  import('svelte/transition').TransitionConfig} Transition function converted to an animation.\r\n */\r\nexport function toAnimation(fn) {\r\n   return (node, animations, params = {}) => fn(node, params);\r\n}\r\n","const s_DEFAULT_TRANSITION = () => void 0;\r\nconst s_DEFAULT_TRANSITION_OPTIONS = {};\r\n\r\nexport { s_DEFAULT_TRANSITION, s_DEFAULT_TRANSITION_OPTIONS };\r\n"],"names":[],"mappings":"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"}