{"version":3,"file":"index.js","sources":["../../../../node_modules/@typhonjs-fvtt/svelte/node_modules/@typhonjs-svelte/lib/src/plugin/system/store/LocalStorage.js","../../../../node_modules/@typhonjs-fvtt/svelte/node_modules/@typhonjs-svelte/lib/src/plugin/system/store/SessionStorage.js","../../../../node_modules/@typhonjs-fvtt/svelte/src/plugin/system/settings/TJSSettingsControl.js","../../../../node_modules/@typhonjs-fvtt/svelte/src/plugin/system/settings/store/TJSGameSettings.js"],"sourcesContent":["import { LocalStorage as LS } from '@typhonjs-svelte/lib/store';\r\n\r\nexport class LocalStorage\r\n{\r\n   #storage = new LS();\r\n\r\n   onPluginLoad(ev)\r\n   {\r\n      const prepend = typeof ev?.pluginOptions?.eventPrepend === 'string' ? `${ev.pluginOptions.eventPrepend}:` : '';\r\n\r\n      ev.eventbus.on(`${prepend}storage:local:item:get`, this.#storage.getItem, this.#storage, { guard: true });\r\n      ev.eventbus.on(`${prepend}storage:local:item:boolean:swap`, this.#storage.swapItemBoolean, this.#storage,\r\n       { guard: true });\r\n      ev.eventbus.on(`${prepend}storage:local:item:set`, this.#storage.setItem, this.#storage, { guard: true });\r\n      ev.eventbus.on(`${prepend}storage:local:store:get`, this.#storage.getStore, this.#storage, { guard: true });\r\n   }\r\n}\r\n","import { SessionStorage as SS }  from '@typhonjs-svelte/lib/store';\r\n\r\nexport class SessionStorage\r\n{\r\n   #storage = new SS();\r\n\r\n   onPluginLoad(ev)\r\n   {\r\n      const prepend = typeof ev?.pluginOptions?.eventPrepend === 'string' ? `${ev.pluginOptions.eventPrepend}:` : '';\r\n\r\n      ev.eventbus.on(`${prepend}storage:session:item:get`, this.#storage.getItem, this.#storage, { guard: true });\r\n      ev.eventbus.on(`${prepend}storage:session:item:boolean:swap`, this.#storage.swapItemBoolean, this.#storage,\r\n       { guard: true });\r\n      ev.eventbus.on(`${prepend}storage:session:item:set`, this.#storage.setItem, this.#storage, { guard: true });\r\n      ev.eventbus.on(`${prepend}storage:session:store:get`, this.#storage.getStore, this.#storage, { guard: true });\r\n   }\r\n}\r\n","/**\r\n * Defines if logging setting changes to the console occurs.\r\n *\r\n * @type {boolean}\r\n */\r\nlet loggingEnabled = false;\r\n\r\n/**\r\n * Defines a base class for dispatch handling from events triggered from the TJSGameSettings plugin. This is a\r\n * convenience mechanism and is not the only way to handle game settings related events. Use this for small to medium\r\n * scoped apps that do not have a lot of cross-cutting concerns.\r\n *\r\n * SettingsControl listens for all setting change events and attempts to invoke a method with the same name as the\r\n * setting located in the implementing child class.\r\n *\r\n * There is one additional event handled by SettingsControl:\r\n * `tjs:system:settings:control:log:enable` - When passed a truthy value console logging of setting changes occurs.\r\n */\r\nexport class TJSSettingsControl\r\n{\r\n   #handleDispatch(data)\r\n   {\r\n      if (typeof data.setting !== 'string') { return; }\r\n\r\n      if (loggingEnabled)\r\n      {\r\n         console.log(`TJSSettingsControl - handleDispatch - data:\\n`, data);\r\n      }\r\n\r\n      const dispatchFunction = this[data.setting];\r\n\r\n      if (typeof dispatchFunction === 'function')\r\n      {\r\n         dispatchFunction.call(this, data.value);\r\n      }\r\n   }\r\n\r\n   onPluginLoad(ev)\r\n   {\r\n      this._eventbus = ev.eventbus;\r\n\r\n      const opts = { guard: true };\r\n\r\n      ev.eventbus.on('tjs:system:game:settings:change:any', this.#handleDispatch, this, opts);\r\n\r\n      // Enables local logging of setting changes.\r\n      ev.eventbus.on('tjs:system:settings:control:log:enable', (enabled) => loggingEnabled = enabled, void 0, opts);\r\n   }\r\n}\r\n","import { TJSGameSettings as GS } from '@typhonjs-fvtt/svelte/store';\r\nimport { isIterable }            from '@typhonjs-fvtt/svelte/util';\r\n\r\n/**\r\n * Provides a TyphonJS plugin to add TJSGameSettings to the plugin eventbus.\r\n *\r\n * The following events are available for registration:\r\n *\r\n * `tjs:system:game:settings:store:get`          - Invokes `getWritableStore` from backing TJSGameSettings instance.\r\n * `tjs:system:game:settings:store:writable:get` - Invokes `getWritableStore` from backing TJSGameSettings instance.\r\n * `tjs:system:game:settings:store:readable:get` - Invokes `getReadableStore` from backing TJSGameSettings instance.\r\n * `tjs:system:game:settings:register`           - Registers a setting adding a callback to fire an event on change.\r\n * `tjs:system:game:settings:register:all`       - Registers multiple settings.\r\n *\r\n * The following events are triggered on change of a game setting.\r\n *\r\n * `tjs:system:game:settings:change:any`           - Provides an object containing the setting and value.\r\n * `tjs:system:game:settings:change:<SETTING KEY>` - Provides the value of the keyed event.\r\n */\r\nexport class TJSGameSettings\r\n{\r\n   #gameSettings = new GS();\r\n\r\n   /**\r\n    * @param {GameSetting} setting - A GameSetting instance to set to Foundry game settings.\r\n    */\r\n   register(setting)\r\n   {\r\n      if (typeof setting !== 'object') { throw new TypeError(`TJSGameSettings - register: setting is not an object.`); }\r\n\r\n      // TODO: Remove deprecation warning and fully remove support for `moduleId` in a future TRL release.\r\n      if (typeof setting.moduleId === 'string')\r\n      {\r\n         console.warn(\r\n          `TJSGameSettings - register deprecation warning: 'moduleId' should be replaced with 'namespace'.`);\r\n         console.warn(`'moduleId' will cease to work in a future update of TRL / TJSGameSettings.`);\r\n      }\r\n\r\n      if (typeof setting.key !== 'string')\r\n      {\r\n         throw new TypeError(`TJSGameSettings - register: 'key' attribute is not a string.`);\r\n      }\r\n\r\n      if (typeof setting.options !== 'object')\r\n      {\r\n         throw new TypeError(`TJSGameSettings - register: 'options' attribute is not an object.`);\r\n      }\r\n\r\n      // TODO: Remove nullish coalescing operator in a future TRL release.\r\n      const namespace = setting.namespace ?? setting.moduleId;\r\n      const key = setting.key;\r\n\r\n      if (typeof namespace !== 'string')\r\n      {\r\n         throw new TypeError(`TJSGameSettings - register: 'namespace' attribute is not a string.`);\r\n      }\r\n\r\n      /**\r\n       * @type {GameSettingOptions}\r\n       */\r\n      const options = setting.options;\r\n\r\n      const onChange = typeof options?.onChange === 'function' ? [options.onChange] : [];\r\n\r\n      onChange.push((value) =>\r\n      {\r\n         if (this._eventbus)\r\n         {\r\n            this._eventbus.trigger(`tjs:system:game:settings:change:any`, { setting: key, value });\r\n            this._eventbus.trigger(`tjs:system:game:settings:change:${key}`, value);\r\n         }\r\n      });\r\n\r\n      this.#gameSettings.register({ namespace, key, options: { ...options, onChange } });\r\n   }\r\n\r\n   /**\r\n    * Registers multiple settings.\r\n    *\r\n    * @param {Iterable<GameSetting>} settings - An iterable list of game setting configurations to register.\r\n    */\r\n   registerAll(settings)\r\n   {\r\n      if (!isIterable(settings)) { throw new TypeError(`TJSGameSettings - registerAll: settings is not iterable.`); }\r\n\r\n      for (const entry of settings) { this.register(entry); }\r\n   }\r\n\r\n   onPluginLoad(ev)\r\n   {\r\n      this._eventbus = ev.eventbus;\r\n\r\n      const opts = { guard: true };\r\n\r\n      ev.eventbus.on(`tjs:system:game:settings:store:get`, this.#gameSettings.getWritableStore, this.#gameSettings,\r\n       opts);\r\n\r\n      ev.eventbus.on(`tjs:system:game:settings:store:readable:get`, this.#gameSettings.getReadableStore,\r\n       this.#gameSettings, opts);\r\n\r\n      ev.eventbus.on(`tjs:system:game:settings:store:writable:get`, this.#gameSettings.getWritableStore,\r\n       this.#gameSettings, opts);\r\n\r\n      ev.eventbus.on(`tjs:system:game:settings:register`, this.register, this, opts);\r\n\r\n      ev.eventbus.on(`tjs:system:game:settings:register:all`, this.registerAll, this, opts);\r\n   }\r\n}\r\n\r\n/**\r\n * @typedef {object} GameSettingOptions\r\n *\r\n * @property {object} [choices] - If choices are defined, the resulting setting will be a select menu.\r\n *\r\n * @property {boolean} [config=true] - Specifies that the setting appears in the configuration view.\r\n *\r\n * @property {string} [hint] - A description of the registered setting and its behavior.\r\n *\r\n * @property {string} name - The displayed name of the setting.\r\n *\r\n * @property {Function} [onChange] - An onChange callback to directly receive callbacks from Foundry on setting change.\r\n *\r\n * @property {object} [range] - If range is specified, the resulting setting will be a range slider.\r\n *\r\n * @property {('client' | 'world')} [scope='client'] - Scope for setting.\r\n *\r\n * @property {Object|Function} type - A constructable object or function.\r\n */\r\n\r\n/**\r\n * @typedef {object} GameSetting - Defines a game setting.\r\n *\r\n * @property {string} namespace - The setting namespoce; usually the ID of the module / system.\r\n *\r\n * @property {string} key - The setting key to register.\r\n *\r\n * @property {GameSettingOptions} options - Configuration for setting data.\r\n */\r\n"],"names":["LS","SS","GS"],"mappings":"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"}