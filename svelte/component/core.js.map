{"version":3,"file":"core.js","sources":["../../node_modules/@typhonjs-fvtt/svelte/src/component/core/TJSContainer.svelte","../../node_modules/@typhonjs-fvtt/svelte/src/component/core/TJSComponentShell.svelte","../../node_modules/@typhonjs-fvtt/svelte/src/component/core/TJSGlassPane.svelte","../../node_modules/@typhonjs-fvtt/svelte/src/component/core/application/TJSHeaderButton.svelte","../../node_modules/@typhonjs-fvtt/svelte/src/component/core/application/TJSApplicationHeader.svelte","../../node_modules/@typhonjs-fvtt/svelte/src/component/core/application/ResizableHandle.svelte","../../node_modules/@typhonjs-fvtt/svelte/src/component/core/application/ApplicationShell.svelte","../../node_modules/@typhonjs-fvtt/svelte/src/component/core/application/TJSApplicationShell.svelte","../../node_modules/@typhonjs-fvtt/svelte/src/component/core/contextmenu/TJSContextMenu.svelte","../../node_modules/@typhonjs-fvtt/svelte/src/component/core/dialog/DialogContent.svelte","../../node_modules/@typhonjs-fvtt/svelte/src/component/core/dialog/DialogShell.svelte"],"sourcesContent":["<script>\n   export let warn = false;\n   export let children = void 0;\n</script>\n\n<svelte:options accessors={true}/>\n\n{#if Array.isArray(children)}\n    {#each children as child}\n        <svelte:component this={child.class} {...child.props} />\n    {/each}\n{:else if warn}\n    <p>Container warning: No children.</p>\n{/if}\n\n<style>\n    p {\n        color: red;\n        font-size: 18px;\n    }\n</style>","<script>\n   import { getContext }    from 'svelte';\n\n   import TJSContainer      from './TJSContainer.svelte';\n\n   // The children array can be specified by a parent via prop or is read below from the external context.\n   export let children = void 0\n\n   const context = getContext('external');\n\n   // This component can host multiple children defined via props or in the TyphonJS SvelteData configuration object\n   // that are potentially mounted in the content area. If no children defined then this component mounts any slotted\n   // child.\n   const allChildren = Array.isArray(children) ? children :\n    typeof context === 'object' ? context.children : void 0;\n</script>\n\n<svelte:options accessors={true}/>\n\n<TJSContainer children={allChildren} warn={true} />","<script>\n   import {\n      s_DEFAULT_TRANSITION,\n      s_DEFAULT_TRANSITION_OPTIONS }   from '@typhonjs-fvtt/svelte/transition';\n\n   export let id = void 0;\n   export let zIndex = Number.MAX_SAFE_INTEGER;\n   export let background = '#50505080';\n   export let captureInput = true;\n   export let preventDefault = true;\n   export let stopPropagation = true;\n\n   let glassPane;\n\n   $: if (glassPane)\n   {\n      glassPane.style.maxWidth = '100%';\n      glassPane.style.maxHeight = '100%';\n      glassPane.style.width = '100%';\n      glassPane.style.height = '100%';\n   }\n\n   $: if (glassPane)\n   {\n      if (captureInput) { glassPane.focus(); }\n      glassPane.style.pointerEvents = captureInput ? 'auto' : 'none';\n   }\n\n   $: if (glassPane) { glassPane.style.background = background; }\n   $: if (glassPane) { glassPane.style.zIndex = zIndex; }\n\n   // ---------------------------------------------------------------------------------------------------------------\n\n   // The following block is somewhat complex, but allows transition options to be updated reactively during\n   // runtime execution.\n\n   // Exports properties to set a transition w/ in / out options.\n   export let transition = void 0;\n   export let inTransition = s_DEFAULT_TRANSITION;\n   export let outTransition = s_DEFAULT_TRANSITION;\n\n   // Exports properties to set options for any transitions.\n   export let transitionOptions = void 0;\n   export let inTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS;\n   export let outTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS;\n\n   // Tracks last transition state.\n   let oldTransition = void 0;\n   let oldTransitionOptions = void 0\n\n   // Run this reactive block when the last transition state is not equal to the current state.\n   $: if (oldTransition !== transition)\n   {\n      // If transition is defined and not the default transition then set it to both in and out transition otherwise\n      // set the default transition to both in & out transitions.\n      const newTransition = s_DEFAULT_TRANSITION !== transition && typeof transition === 'function' ? transition :\n       s_DEFAULT_TRANSITION;\n\n      inTransition = newTransition;\n      outTransition = newTransition;\n\n      oldTransition = newTransition;\n   }\n\n   // Run this reactive block when the last transition options state is not equal to the current options state.\n   $: if (oldTransitionOptions !== transitionOptions)\n   {\n      const newOptions = transitionOptions !== s_DEFAULT_TRANSITION_OPTIONS && typeof transitionOptions === 'object' ?\n       transitionOptions : s_DEFAULT_TRANSITION_OPTIONS;\n\n      inTransitionOptions = newOptions;\n      outTransitionOptions = newOptions;\n\n      oldTransitionOptions = newOptions;\n   }\n\n   // Handle cases if inTransition is unset; assign noop default transition function.\n   $: if (typeof inTransition !== 'function') { inTransition = s_DEFAULT_TRANSITION; }\n\n   // Handle cases if outTransition is unset; assign noop default transition function.\n   $: if (typeof outTransition !== 'function') { outTransition = s_DEFAULT_TRANSITION; }\n\n   // Handle cases if inTransitionOptions is unset; assign empty default transition options.\n   $: if (typeof inTransitionOptions !== 'object') { inTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS; }\n\n   // Handle cases if outTransitionOptions is unset; assign empty default transition options.\n   $: if (typeof outTransitionOptions !== 'object') { outTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS; }\n\n   // ---------------------------------------------------------------------------------------------------------------\n\n   function swallow(event)\n   {\n      if (captureInput)\n      {\n         if (preventDefault) { event.preventDefault(); }\n         if (stopPropagation) { event.stopPropagation(); }\n      }\n   }\n</script>\n\n<svelte:options accessors={true}/>\n\n<div id={id}\n     bind:this={glassPane}\n     tabindex=0\n     class=tjs-glass-pane\n     in:inTransition={inTransitionOptions}\n     out:outTransition={outTransitionOptions}\n     on:keydown={swallow}>\n   <slot />\n</div>\n\n<style>\n   .tjs-glass-pane {\n      position: absolute;\n      overflow: inherit;\n   }\n</style>","<script>\n   /**\n    * Provides an app header button conforming to the Foundry {@link ApplicationHeaderButton} type. Additionally a\n    * `title` field is supported to give a tool tip for the button. The `onclick` function if defined is invoked when\n    * the button is clicked and state is updated accordingly.\n    */\n   import { localize }  from '@typhonjs-fvtt/svelte/helper';\n\n   export let button;\n\n   function onClick()\n   {\n      if (typeof button.onclick === 'function')\n      {\n         button.onclick.call(button);\n         button = button;\n      }\n   }\n</script>\n\n<svelte:options accessors={true}/>\n\n<a on:click={onClick} class=\"header-button {button.class}\">\n    <i class={button.icon} title={localize(button.title)}></i>{localize(button.label)}\n</a>\n","<script>\n   import { getContext }   from 'svelte';\n\n   import { draggable }    from '@typhonjs-fvtt/svelte/action';\n   import { localize }     from '@typhonjs-fvtt/svelte/helper';\n\n   import TJSHeaderButton  from './TJSHeaderButton.svelte';\n\n   const context = getContext('external');\n   const foundryApp = context.foundryApp;\n\n   const bringToTop = () =>\n   {\n      if (typeof foundryApp.options.popOut === 'boolean' && foundryApp.options.popOut)\n      {\n         foundryApp.bringToTop.call(foundryApp);\n      }\n   }\n\n    typeof foundryApp.options.popOut === 'boolean' && foundryApp.options.popOut ?\n    () => foundryApp.bringToTop.call(foundryApp) : () => void 0;\n\n   const storeTitle = context.storeAppOptions.title;\n   const storeDraggable = context.storeAppOptions.draggable;\n   const storeHeaderButtons = context.storeUIOptions.headerButtons;\n   const storeMinimizable = context.storeAppOptions.minimizable;\n\n   function minimizable(node, booleanStore)\n   {\n      const callback = foundryApp._onToggleMinimize.bind(foundryApp);\n\n      function activateListeners() { node.addEventListener('dblclick', callback); }\n      function removeListeners() { node.removeEventListener('dblclick', callback); }\n\n      if (booleanStore) { activateListeners(); }\n\n      return {\n         update: ({ booleanStore }) =>  // eslint-disable-line no-shadow\n         {\n            if (booleanStore) { activateListeners(); }\n            else { removeListeners(); }\n         },\n\n         destroy: () => removeListeners()\n      };\n   }\n</script>\n\n<header class=\"window-header flexrow\"\n        on:pointerdown={bringToTop}\n        use:draggable={{ positionable: foundryApp, booleanStore: $storeDraggable }}\n        use:minimizable={$storeMinimizable}>\n    <h4 class=window-title>{localize($storeTitle)}</h4>\n    {#each $storeHeaderButtons as button}\n        <TJSHeaderButton {button}/>\n    {/each}\n</header>\n","<script>\n   import { getContext } from 'svelte';\n\n   export let isResizable = false;\n\n   const context = getContext('external');\n\n   // Allows retrieval of the element root at runtime.\n   const getElementRoot = getContext('getElementRoot');\n\n   const foundryApp = context.foundryApp;\n   const storeResizable = context.storeAppOptions.resizable;\n   const storeMinimized = context.storeUIOptions.minimized;\n\n   let elementResize;\n\n   $: if (elementResize)\n   {\n      // Instead of creating a derived store it is easier to use isResizable and the minimized store below.\n      elementResize.style.display = isResizable && !$storeMinimized ? 'block' : 'none';\n\n      // Add / remove `resizable` class from element root.\n      const elementRoot = getElementRoot();\n      if (elementRoot) { elementRoot.classList[isResizable ? 'add' : 'remove']('resizable'); }\n   }\n\n   /**\n    * Provides an action to handle resizing the application shell based on the resizable app option.\n    *\n    * @param {HTMLElement}       node - The node associated with the action.\n    *\n    * @param {Readable<boolean>} booleanStore - A Svelte store that contains a boolean.\n    *\n    * @returns {{update: Function, destroy: Function}} The action lifecycle methods.\n    */\n   function resizable(node, booleanStore)\n   {\n      /**\n       * Duplicate the app / Positionable starting position to track differences.\n       *\n       * @type {object}\n       */\n      let position = null;\n\n      /**\n       * Stores the initial X / Y on drag down.\n       *\n       * @type {object}\n       */\n      let initialPosition = {};\n\n      /**\n       * Throttle mousemove event handling to 60fps\n       *\n       * @type {number}\n       */\n      let moveTime = 0;\n\n      /**\n       * Stores the active state and is used to cut off any active resizing when the store value changes.\n       *\n       * @type {boolean}\n       */\n      let active = booleanStore;\n\n      /**\n       * Remember event handlers associated with this action so they may be later unregistered.\n       *\n       * @type {Object}\n       */\n      const handlers = {\n         resizeDown: ['pointerdown', (e) => onResizePointerDown(e), false],\n         resizeMove: ['pointermove', (e) => onResizePointerMove(e), false],\n         resizeUp: ['pointerup', (e) => onResizePointerUp(e), false]\n      };\n\n      /**\n       * Activates listeners.\n       */\n      function activateListeners()\n      {\n         active = true;\n\n         // Resize handlers\n         node.addEventListener(...handlers.resizeDown);\n\n         isResizable = true;\n\n         node.style.display = 'block';\n      }\n\n      /**\n       * Removes listeners.\n       */\n      function removeListeners()\n      {\n         active = false;\n\n         // Resize handlers\n         node.removeEventListener(...handlers.resizeDown);\n         node.removeEventListener(...handlers.resizeMove);\n         node.removeEventListener(...handlers.resizeUp);\n\n         node.style.display = 'none';\n\n         isResizable = false;\n      }\n\n      // On mount if resizable is true then activate listeners otherwise set element display to `none`.\n      if (active)\n      {\n         activateListeners();\n      }\n      else\n      {\n         node.style.display = 'none';\n      }\n\n      /**\n       * Handle the initial mouse click which activates dragging behavior for the application\n       * @private\n       */\n      function onResizePointerDown(event)\n      {\n         event.preventDefault();\n\n         // Limit dragging to 60 updates per second\n         const now = Date.now();\n\n         if ((now - moveTime) < (1000 / 60)) { return; }\n\n         moveTime = now;\n\n         // Record initial position\n         position = foundry.utils.duplicate(foundryApp.position);\n\n         if (position.height === 'auto') { position.height = getElementRoot().clientHeight; }\n         if (position.width === 'auto') { position.width = getElementRoot().clientWidth; }\n\n         initialPosition = { x: event.clientX, y: event.clientY };\n\n         // Add temporary handlers\n         globalThis.addEventListener(...handlers.resizeMove);\n         globalThis.addEventListener(...handlers.resizeUp);\n      }\n\n      /**\n       * Move the window with the mouse, bounding the movement to ensure the window stays within bounds of the viewport\n       * @private\n       */\n      function onResizePointerMove(event)\n      {\n         event.preventDefault();\n\n         if (!active) { return; }\n\n         foundryApp.setPosition({\n            width: position.width + (event.clientX - initialPosition.x),\n            height: position.height + (event.clientY - initialPosition.y)\n         });\n      }\n\n      /**\n       * Conclude the dragging behavior when the mouse is release, setting the final position and removing listeners\n       * @private\n       */\n      function onResizePointerUp(event)\n      {\n         event.preventDefault();\n\n         globalThis.removeEventListener(...handlers.resizeMove);\n         globalThis.removeEventListener(...handlers.resizeUp);\n\n         foundryApp._onResize(event);\n      }\n\n\n      return {\n         update: (booleanStore) =>  // eslint-disable-line no-shadow\n         {\n            if (booleanStore) { activateListeners(); }\n            else { removeListeners(); }\n         },\n\n         destroy: () => removeListeners()\n      };\n   }\n\n</script>\n\n<div class=\"window-resizable-handle\"\n     use:resizable={$storeResizable}\n     bind:this={elementResize}>\n   <i class=\"fas fa-arrows-alt-h\"></i>\n</div>\n","<script>\n   import { getContext, setContext }   from 'svelte';\n\n   import TJSApplicationHeader         from './TJSApplicationHeader.svelte';\n   import TJSContainer                 from '../TJSContainer.svelte';\n   import ResizableHandle              from './ResizableHandle.svelte';\n\n   import {\n      s_DEFAULT_TRANSITION,\n      s_DEFAULT_TRANSITION_OPTIONS }   from '@typhonjs-fvtt/svelte/transition';\n\n   // Bound to the content and root elements. Can be used by parent components. SvelteApplication will also\n   // use 'elementRoot' to set the element of the Application. You can also provide `elementContent` and\n   // `elementTarget`. Please see SvelteApplication lifecycle documentation.\n   export let elementContent;\n   export let elementRoot;\n\n   // The children array can be specified by a parent via prop or is read below from the external context.\n   export let children = void 0\n\n   // If a parent component binds and sets `heightChanged` to true then it is bound to the content & root element\n   // `clientHeight`.\n   export let heightChanged = false;\n\n   // Store the initial `heightChanged` state. If it is truthy then `clientHeight` for the content & root elements\n   // are bound to `heightChanged` to signal to any parent component of any change to the client & root.\n   const bindHeightChanged = !!heightChanged;\n\n   setContext('getElementContent', () => elementContent);\n   setContext('getElementRoot', () => elementRoot);\n\n   const context = getContext('external');\n\n   // Store Foundry Application reference.\n   const foundryApp = context.foundryApp;\n\n   // This component can host multiple children defined via props or in the TyphonJS SvelteData configuration object\n   // that are potentially mounted in the content area. If no children defined then this component mounts any slotted\n   // child.\n   const allChildren = Array.isArray(children) ? children :\n    typeof context === 'object' ? context.children : void 0;\n\n   // ---------------------------------------------------------------------------------------------------------------\n\n   // The following block is somewhat complex, but allows transition options to be updated reactively during\n   // runtime execution.\n\n   // Exports properties to set a transition w/ in / out options.\n   export let transition = void 0;\n   export let inTransition = s_DEFAULT_TRANSITION;\n   export let outTransition = s_DEFAULT_TRANSITION;\n\n   // Exports properties to set options for any transitions.\n   export let transitionOptions = void 0;\n   export let inTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS;\n   export let outTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS;\n\n   // Tracks last transition state.\n   let oldTransition = void 0;\n   let oldTransitionOptions = void 0\n\n   // Run this reactive block when the last transition state is not equal to the current state.\n   $: if (oldTransition !== transition)\n   {\n      // If transition is defined and not the default transition then set it to both in and out transition otherwise\n      // set the default transition to both in & out transitions.\n      const newTransition = s_DEFAULT_TRANSITION !== transition && typeof transition === 'function' ? transition :\n       s_DEFAULT_TRANSITION;\n\n      inTransition = newTransition;\n      outTransition = newTransition;\n\n      oldTransition = newTransition;\n   }\n\n   // Run this reactive block when the last transition options state is not equal to the current options state.\n   $: if (oldTransitionOptions !== transitionOptions)\n   {\n      const newOptions = transitionOptions !== s_DEFAULT_TRANSITION_OPTIONS && typeof transitionOptions === 'object' ?\n       transitionOptions : s_DEFAULT_TRANSITION_OPTIONS;\n\n      inTransitionOptions = newOptions;\n      outTransitionOptions = newOptions;\n\n      oldTransitionOptions = newOptions;\n   }\n\n   // Handle cases if inTransition is unset; assign noop default transition function.\n   $: if (typeof inTransition !== 'function') { inTransition = s_DEFAULT_TRANSITION; }\n\n   $:\n   {\n      // Handle cases if outTransition is unset; assign noop default transition function.\n      if (typeof outTransition !== 'function') { outTransition = s_DEFAULT_TRANSITION; }\n\n      // Set jquery close animation to either run or not when an out transition is changed.\n      if (foundryApp && typeof foundryApp?.options?.jqueryCloseAnimation === 'boolean')\n      {\n         foundryApp.options.jqueryCloseAnimation = outTransition === s_DEFAULT_TRANSITION;\n      }\n   }\n\n   // Handle cases if inTransitionOptions is unset; assign empty default transition options.\n   $: if (typeof inTransitionOptions !== 'object') { inTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS; }\n\n   // Handle cases if outTransitionOptions is unset; assign empty default transition options.\n   $: if (typeof outTransitionOptions !== 'object') { outTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS; }\n</script>\n\n<svelte:options accessors={true}/>\n\n{#if bindHeightChanged}\n   <div id={foundryApp.id}\n        class=\"app window-app {foundryApp.options.classes.join(' ')}\"\n        data-appid={foundryApp.appId}\n        bind:clientHeight={heightChanged}\n        bind:this={elementRoot}\n        in:inTransition={inTransitionOptions}\n        out:outTransition={outTransitionOptions}>\n      <TJSApplicationHeader />\n      <section class=window-content bind:this={elementContent} bind:clientHeight={heightChanged}>\n         {#if Array.isArray(allChildren)}\n            <TJSContainer children={allChildren} />\n         {:else}\n            <slot />\n         {/if}\n      </section>\n      <ResizableHandle />\n   </div>\n{:else}\n   <div id={foundryApp.id}\n        class=\"app window-app {foundryApp.options.classes.join(' ')}\"\n        data-appid={foundryApp.appId}\n        bind:this={elementRoot}\n        in:inTransition={inTransitionOptions}\n        out:outTransition={outTransitionOptions}>\n      <TJSApplicationHeader />\n      <section class=window-content bind:this={elementContent}>\n         {#if Array.isArray(allChildren)}\n            <TJSContainer children={allChildren} />\n         {:else}\n            <slot />\n         {/if}\n      </section>\n      <ResizableHandle />\n   </div>\n{/if}\n\n<style>\n   .window-app {\n      overflow: inherit;\n   }\n</style>","<script>\n   import { getContext, setContext }   from 'svelte';\n\n   import TJSApplicationHeader         from './TJSApplicationHeader.svelte';\n   import TJSContainer                 from '../TJSContainer.svelte';\n   import ResizableHandle              from './ResizableHandle.svelte';\n\n   import {\n      s_DEFAULT_TRANSITION,\n      s_DEFAULT_TRANSITION_OPTIONS }   from '@typhonjs-fvtt/svelte/transition';\n\n   // Bound to the content and root elements. Can be used by parent components. SvelteApplication will also\n   // use 'elementRoot' to set the element of the Application. You can also provide `elementContent` and\n   // `elementTarget`. Please see SvelteApplication lifecycle documentation.\n   export let elementContent;\n   export let elementRoot;\n\n   // The children array can be specified by a parent via prop or is read below from the external context.\n   export let children = void 0\n\n   // If a parent component binds and sets `heightChanged` to true then it is bound to the content & root element\n   // `clientHeight`.\n   export let heightChanged = false;\n\n   // Store the initial `heightChanged` state. If it is truthy then `clientHeight` for the content & root elements\n   // are bound to `heightChanged` to signal to any parent component of any change to the client & root.\n   const bindHeightChanged = !!heightChanged;\n\n   setContext('getElementContent', () => elementContent);\n   setContext('getElementRoot', () => elementRoot);\n\n   const context = getContext('external');\n\n   // Store Foundry Application reference.\n   const foundryApp = context.foundryApp;\n\n   // This component can host multiple children defined via props or in the TyphonJS SvelteData configuration object\n   // that are potentially mounted in the content area. If no children defined then this component mounts any slotted\n   // child.\n   const allChildren = Array.isArray(children) ? children :\n    typeof context === 'object' ? context.children : void 0;\n\n   // ---------------------------------------------------------------------------------------------------------------\n\n   // The following block is somewhat complex, but allows transition options to be updated reactively during\n   // runtime execution.\n\n   // Exports properties to set a transition w/ in / out options.\n   export let transition = void 0;\n   export let inTransition = s_DEFAULT_TRANSITION;\n   export let outTransition = s_DEFAULT_TRANSITION;\n\n   // Exports properties to set options for any transitions.\n   export let transitionOptions = void 0;\n   export let inTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS;\n   export let outTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS;\n\n   // Tracks last transition state.\n   let oldTransition = void 0;\n   let oldTransitionOptions = void 0\n\n   // Run this reactive block when the last transition state is not equal to the current state.\n   $: if (oldTransition !== transition)\n   {\n      // If transition is defined and not the default transition then set it to both in and out transition otherwise\n      // set the default transition to both in & out transitions.\n      const newTransition = s_DEFAULT_TRANSITION !== transition && typeof transition === 'function' ? transition :\n       s_DEFAULT_TRANSITION;\n\n      inTransition = newTransition;\n      outTransition = newTransition;\n\n      oldTransition = newTransition;\n   }\n\n   // Run this reactive block when the last transition options state is not equal to the current options state.\n   $: if (oldTransitionOptions !== transitionOptions)\n   {\n      const newOptions = transitionOptions !== s_DEFAULT_TRANSITION_OPTIONS && typeof transitionOptions === 'object' ?\n       transitionOptions : s_DEFAULT_TRANSITION_OPTIONS;\n\n      inTransitionOptions = newOptions;\n      outTransitionOptions = newOptions;\n\n      oldTransitionOptions = newOptions;\n   }\n\n   // Handle cases if inTransition is unset; assign noop default transition function.\n   $: if (typeof inTransition !== 'function') { inTransition = s_DEFAULT_TRANSITION; }\n\n   $:\n   {\n      // Handle cases if outTransition is unset; assign noop default transition function.\n      if (typeof outTransition !== 'function') { outTransition = s_DEFAULT_TRANSITION; }\n\n      // Set jquery close animation to either run or not when an out transition is changed.\n      if (foundryApp && typeof foundryApp?.options?.jqueryCloseAnimation === 'boolean')\n      {\n         foundryApp.options.jqueryCloseAnimation = outTransition === s_DEFAULT_TRANSITION;\n      }\n   }\n\n   // Handle cases if inTransitionOptions is unset; assign empty default transition options.\n   $: if (typeof inTransitionOptions !== 'object') { inTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS; }\n\n   // Handle cases if outTransitionOptions is unset; assign empty default transition options.\n   $: if (typeof outTransitionOptions !== 'object') { outTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS; }\n</script>\n\n<svelte:options accessors={true}/>\n\n{#if bindHeightChanged}\n   <div id={foundryApp.id}\n        class=\"tjs-app tjs-window-app {foundryApp.options.classes.join(' ')}\"\n        data-appid={foundryApp.appId}\n        bind:clientHeight={heightChanged}\n        bind:this={elementRoot}\n        in:inTransition={inTransitionOptions}\n        out:outTransition={outTransitionOptions}>\n       <TJSApplicationHeader />\n       <section class=window-content bind:this={elementContent} bind:clientHeight={heightChanged}>\n           {#if Array.isArray(allChildren)}\n               <TJSContainer children={allChildren} />\n           {:else}\n               <slot />\n           {/if}\n       </section>\n       <ResizableHandle />\n   </div>\n{:else}\n   <div id={foundryApp.id}\n        class=\"tjs-app tjs-window-app {foundryApp.options.classes.join(' ')}\"\n        data-appid={foundryApp.appId}\n        bind:this={elementRoot}\n        in:inTransition={inTransitionOptions}\n        out:outTransition={outTransitionOptions}>\n       <TJSApplicationHeader />\n       <section class=window-content bind:this={elementContent}>\n           {#if Array.isArray(allChildren)}\n               <TJSContainer children={allChildren} />\n           {:else}\n               <slot />\n           {/if}\n       </section>\n      <ResizableHandle />\n   </div>\n{/if}\n\n\n<style>\n  /**\n   * Defines styles that mimic a Foundry popout Application. `:global` is used to preserve the unused CSS in the\n   * template above. A primary benefit of a separate Application implementation is that the styles are not overridden\n   * by any given game system / mods that might effect the standard Foundry Application CSS. This allows separate\n   * and unique styles to be given to this component regardless of game system / module modifications.\n   */\n  :global(.tjs-app) {\n    max-height: 100%;\n    background: url(/ui/denim075.png) repeat;\n    border-radius: 5px;\n    box-shadow: 0 0 20px #000;\n    margin: 3px 0;\n    color: #f0f0e0;\n    position: absolute;\n  }\n\n  :global(.tjs-window-app) {\n    display: flex;\n    flex-direction: column;\n    flex-wrap: nowrap;\n    justify-content: flex-start;\n    padding: 0;\n    z-index: 99;\n  }\n\n  :global(.tjs-window-app .window-content) {\n    display: flex;\n    flex-direction: column;\n    flex-wrap: nowrap;\n    justify-content: flex-start;\n    padding: 8px;\n    color: #191813;\n    overflow-y: auto;\n    overflow-x: hidden;\n  }\n\n  :global(.tjs-window-app .window-header) {\n    flex: 0 0 30px;\n    overflow: hidden;\n    padding: 0 8px;\n    line-height: 30px;\n    border-bottom: 1px solid #000;\n    pointer-events: auto;\n  }\n\n  :global(.tjs-window-app .window-header a) {\n    flex: none;\n    margin: 0 0 0 8px;\n  }\n\n  :global(.tjs-window-app .window-header h4) {\n    font-family: Signika, sans-serif;\n  }\n\n  :global(.tjs-window-app .window-header i[class^=fa]) {\n    margin-right: 3px;\n  }\n\n  :global(.tjs-window-app .window-header .window-title) {\n    margin: 0;\n    word-break: break-all;\n  }\n\n  :global(.tjs-window-app .window-resizable-handle) {\n    width: 20px;\n    height: 20px;\n    position: absolute;\n    bottom: -1px;\n    right: 0;\n    background: #444;\n    padding: 2px;\n    border: 1px solid #111;\n    border-radius: 4px 0 0 0;\n  }\n\n  :global(.tjs-window-app .window-resizable-handle i.fas) {\n    transform: rotate(45deg);\n  }\n\n  :global(.tjs-window-app.minimized .window-header) {\n     border: 1px solid #000;\n  }\n</style>","<script>\n   import { createEventDispatcher } from 'svelte';\n   import { current_component }     from 'svelte/internal';\n\n   import { localize }              from '@typhonjs-fvtt/svelte/helper';\n   import { slideFade }             from '@typhonjs-fvtt/svelte/transition';\n   import { outroAndDestroy }       from '@typhonjs-fvtt/svelte/util';\n\n   export let id = '';\n   export let x = 0;\n   export let y = 0;\n   export let items = [];\n   export let zIndex = 10000;\n   export let transitionOptions = void 0;\n\n   // Bound to the nav element / menu.\n   let menuEl;\n\n   // Store this component reference.\n   const local = current_component;\n\n   // Dispatches `close` event.\n   const dispatch = createEventDispatcher();\n\n   // Stores if this context menu is closed.\n   let closed = false;\n\n   /**\n    * Provides a custom animate callback allowing inspection of the element to change positioning styles based on the\n    * height / width of the element and `document.body`. This allows the context menu to expand up when the menu\n    * is outside the height bound of `document.body` and expand to the left if width is greater than `document.body`.\n    *\n    * @param {HTMLElement} node - nav element.\n    *\n    * @returns {object} Transition object.\n    */\n   function animate(node)\n   {\n      const expandUp = y + node.clientHeight > document.body.clientHeight\n      const expandLeft = x + node.clientWidth > document.body.clientWidth\n\n      node.style.top = expandUp ? null : `${y}px`;\n      node.style.bottom = expandUp ? `${document.body.clientHeight - y}px` : null;\n\n      node.style.left = expandLeft ? null : `${x}px`;\n      node.style.right = expandLeft ? `${document.body.clientWidth - x}px` : null;\n\n      return slideFade(node, transitionOptions);\n   }\n\n   /**\n    * Invokes a function on click of a menu item then fires the `close` event and automatically runs the outro\n    * transition and destroys the component.\n    *\n    * @param {function} callback - Function to invoke on click.\n    */\n   function onClick(callback)\n   {\n      if (typeof callback === 'function') { callback(); }\n\n      if (!closed)\n      {\n         dispatch('close');\n         closed = true;\n         outroAndDestroy(local);\n      }\n   }\n\n   /**\n    * Determines if a pointer pressed to the document body closes the context menu. If the click occurs outside the\n    * context menu then fire the `close` event and run the outro transition then destroy the component.\n    *\n    * @param {PointerEvent}   event - Pointer event from document body click.\n    */\n   async function onClose(event)\n   {\n      // Early out if the pointer down is inside the menu element.\n      if (event.target === menuEl || menuEl.contains(event.target)) { return; }\n\n      // Early out if the event page X / Y is the same as this context menu.\n      if (Math.floor(event.pageX) === x && Math.floor(event.pageY) === y) { return; }\n\n      if (!closed)\n      {\n         dispatch('close');\n         closed = true;\n         outroAndDestroy(local);\n      }\n   }\n</script>\n<!-- bind to `document.body` to receive pointer down events to close the context menu. -->\n<svelte:body on:pointerdown={onClose}/>\n\n<nav id={id} class=tjs-context-menu transition:animate bind:this={menuEl} style=\"z-index: {zIndex}\">\n    <ol class=tjs-context-items>\n        {#each items as item}\n            <li class=tjs-context-item on:click={() => onClick(item.onclick)}><i class={item.icon}></i>{localize(item.label)}</li>\n        {/each}\n    </ol>\n</nav>\n\n<style>\n    .tjs-context-menu {\n        position: fixed;\n        width: fit-content;\n        font-size: 14px;\n        box-shadow: 0 0 10px #000;\n        height: max-content;\n        min-width: 150px;\n        max-width: 360px;\n        background: #23221d;\n        border: 1px solid #000;\n        border-radius: 5px;\n        color: #EEE;\n    }\n\n    .tjs-context-menu ol.tjs-context-items {\n        list-style: none;\n        margin: 0;\n        padding: 0;\n    }\n\n    .tjs-context-menu li.tjs-context-item {\n        padding: 0 5px;\n        line-height: 32px;\n    }\n\n    .tjs-context-menu li.tjs-context-item:hover {\n        color: #FFF;\n        text-shadow: 0 0 4px red;\n    }\n\n    .tjs-context-menu li.tjs-context-item > i {\n        margin-right: 5px;\n    }\n</style>","<script>\n   import { getContext }   from 'svelte';\n\n   import {\n      isSvelteComponent,\n      parseSvelteConfig }  from '@typhonjs-fvtt/svelte/util';\n\n   export let data = {};\n\n   let buttons;\n   let content;\n   let dialogComponent;\n   let dialogProps = {};\n\n   let foundryApp = getContext('external').foundryApp;\n\n   // If `data.buttons` is not an object then set an empty array otherwise reduce the button data.\n   $: buttons = typeof data.buttons !== 'object' ? [] : Object.keys(data.buttons).reduce((obj, key) =>\n   {\n      const b = data.buttons[key];\n      if (b.condition !== false)\n      {\n         obj.push({\n            ...b,\n            id: key,\n            cssClass: [key, data.default === key ? 'default' : ''].filterJoin(' ')\n         })\n      }\n      return obj;\n   }, []);\n\n   $:\n   {\n      content = data.content;\n\n      try\n      {\n         if (isSvelteComponent(content))\n         {\n            dialogComponent = content;\n            dialogProps = {};\n         }\n         else if (typeof content === 'object')\n         {\n            const svelteConfig = parseSvelteConfig(content, foundryApp);\n            dialogComponent = svelteConfig.class;\n            dialogProps = svelteConfig.props ?? {};\n\n            // Check for any children parsed and added to the external context.\n            const children = svelteConfig?.context?.get('external')?.children;\n\n            // If so add to dialogProps.\n            if (Array.isArray(children)) { dialogProps.children = children; }\n         }\n         else\n         {\n            dialogComponent = void 0;\n            dialogProps = {};\n         }\n      }\n      catch (err)\n      {\n         dialogComponent = void 0;\n         dialogProps = {};\n\n         content = err.message;\n         console.error(err);\n      }\n   }\n\n   function onClick(button)\n   {\n      try\n      {\n         // Passing back the element is to keep with the existing Foundry API.\n         if (typeof button.callback === 'function')\n         {\n            button.callback(foundryApp.options.jQuery ? foundryApp.element : foundryApp.element[0]);\n         }\n\n         foundryApp.close();\n      }\n      catch(err)\n      {\n         ui.notifications.error(err);\n         throw new Error(err);\n      }\n   }\n\n   function onKeydown(event)\n   {\n      switch (event.key)\n      {\n         case 'Escape':\n            return foundryApp.close();\n\n         case 'Enter':\n            onClick(data.buttons[data.default]);\n            break;\n      }\n   }\n</script>\n\n<svelte:body on:keydown|preventDefault|stopPropagation={onKeydown} />\n\n<div class=\"dialog-content\">\n   {#if typeof content === 'string'}\n      {@html content}\n   {:else if dialogComponent}\n      <svelte:component this={dialogComponent} {...dialogProps} />\n   {/if}\n</div>\n<div class=\"dialog-buttons\">\n   {#each buttons as button (button.id)}\n   <button class=\"dialog-button {button.cssClass}\" on:click={() => onClick(button)}>\n      {@html button.icon}\n      {@html button.label}\n   </button>\n   {/each}\n</div>\n\n<style>\n   div.dialog-buttons {\n      padding-top: 8px;\n   }\n</style>","<script>\n   import { getContext }               from 'svelte';\n   import { fade }                     from 'svelte/transition';\n\n   import ApplicationShell             from '../application/ApplicationShell.svelte';\n   import DialogContent                from './DialogContent.svelte';\n   import TJSGlassPane                 from '../TJSGlassPane.svelte';\n\n   // Application shell contract.\n   export let elementRoot;\n\n   // The dialog data.\n   export let data = {};\n\n   const foundryApp = getContext('external').foundryApp;\n\n   const s_MODAL_TRANSITION = fade;\n   const s_MODAL_TRANSITION_OPTIONS = { duration: 200 };\n   const s_MODAL_BACKGROUND = '#50505080'\n\n   let modal = void 0;\n\n   // Stores props for the ApplicationShell.\n   const appProps = {\n      // Stores any transition functions.\n      transition: void 0,\n      inTransition: void 0,\n      outTransition: void 0,\n\n      // Stores properties to set for options for any transitions.\n      transitionOptions: void 0,\n      inTransitionOptions: void 0,\n      outTransitionOptions: void 0,\n   }\n\n   const modalProps = {\n      // Background CSS style string.\n      background: void 0,\n\n      // Stores any transition functions.\n      transition: void 0,\n      inTransition: void 0,\n      outTransition: void 0,\n\n      // Stores properties to set for options for any transitions.\n      transitionOptions: void 0,\n      inTransitionOptions: void 0,\n      outTransitionOptions: void 0,\n   }\n\n   let zIndex = void 0;\n\n   // Only set modal once on mount. You can't change between a modal an non-modal dialog during runtime.\n   if (modal === void 0) { modal = typeof data?.modal === 'boolean' ? data.modal : false; }\n\n   // Retrieve values from the DialogData object and also potentially set any SvelteApplication accessors.\n   // Explicit checks are performed against existing local variables as the only externally reactive variable is `data`.\n   // All of the checks below trigger when there are any external changes to the `data` prop.\n   // Prevent any unnecessary changing of local & `foundryApp` variables unless actual changes occur.\n\n   // Foundry App options --------------------------------------------------------------------------------------------\n\n   $: if (typeof data === 'object')\n   {\n      const newZIndex = Number.isInteger(data.zIndex) || data.zIndex === null ? data.zIndex :\n       modal ? Number.MAX_SAFE_INTEGER : Number.MAX_SAFE_INTEGER - 1\n      if (zIndex !== newZIndex) { zIndex = newZIndex; }\n\n      // Update the main foundry options when data changes. Perform explicit checks against existing data in `foundryApp`.\n      const newDraggable = data.draggable ?? true;\n      if (foundryApp.draggable !== newDraggable) { foundryApp.draggable = newDraggable; }\n\n      const newPopOut = data.popOut ?? true;\n      if (foundryApp.popOut !== newPopOut) { foundryApp.popOut = newPopOut; }\n\n      const newResizable = data.resizable ?? false;\n      if (foundryApp.resizable !== newResizable) { foundryApp.resizable = newResizable; }\n\n      // Note foundryApp.title from Application localizes `options.title`, so compare with `foundryApp.options.title`.\n      const newTitle = data.title ?? 'Dialog';\n      if (newTitle !== foundryApp?.options?.title) { foundryApp.title = newTitle; }\n\n      if (foundryApp.zIndex !== zIndex) { foundryApp.zIndex = zIndex; }\n   }\n\n   // ApplicationShell transition options ----------------------------------------------------------------------------\n\n   $: if (typeof data?.transition === 'object')\n   {\n      // Store data.transitions to shorten statements below.\n      const d = data.transition;\n\n      if (d?.transition !== appProps.transition) { appProps.transition = d.transition; }\n      if (d?.inTransition !== appProps.inTransition) { appProps.inTransition = d.inTransition; }\n      if (d?.outTransition !== appProps.outTransition) { appProps.outTransition = d.outTransition; }\n      if (d?.transitionOptions !== appProps.transitionOptions) { appProps.transitionOptions = d.transitionOptions; }\n\n      if (d?.inTransitionOptions !== appProps.inTransitionOptions)\n      {\n         appProps.inTransitionOptions = d.inTransitionOptions;\n      }\n\n      if (d?.outTransitionOptions !== appProps.outTransitionOptions)\n      {\n         appProps.outTransitionOptions = d.outTransitionOptions;\n      }\n   }\n\n   // Modal options --------------------------------------------------------------------------------------------------\n\n   $:\n   {\n      const newModalBackground = typeof data?.modalOptions?.background === 'string' ? data.modalOptions.background :\n       s_MODAL_BACKGROUND;\n\n      if (newModalBackground !== modalProps.background) { modalProps.background = newModalBackground; }\n   }\n\n   $: if (typeof data?.modalOptions?.transition === 'object')\n   {\n      // Store data.transitions to shorten statements below.\n      const d = data.modalOptions.transition;\n\n      if (d?.transition !== modalProps.transition)\n      {\n         modalProps.transition = typeof d?.transition === 'function' ? d.transition : s_MODAL_TRANSITION;\n      }\n\n      if (d?.inTransition !== modalProps.inTransition) { modalProps.inTransition = d.inTransition; }\n      if (d?.outTransition !== modalProps.outTransition) { modalProps.outTransition = d.outTransition; }\n\n      // Provide default transition options if not defined.\n      if (d?.transitionOptions !== modalProps.transitionOptions)\n      {\n         modalProps.transitionOptions = typeof d?.transitionOptions === 'object' ? d.transitionOptions :\n          s_MODAL_TRANSITION_OPTIONS;\n      }\n\n      if (d?.inTransitionOptions !== modalProps.inTransitionOptions)\n      {\n         modalProps.inTransitionOptions = d.inTransitionOptions;\n      }\n\n      if (d?.outTransitionOptions !== modalProps.outTransitionOptions)\n      {\n         modalProps.outTransitionOptions = d.outTransitionOptions;\n      }\n   }\n   else  // Provide a fallback / default glass pane transition when `data.modalOptions.transition` is not defined.\n   {\n      const newModalTransition = typeof data?.modalOptions?.transition?.transition === 'function' ?\n       data.modalOptions.transition.transition : s_MODAL_TRANSITION;\n\n      if (newModalTransition !== modalProps.transition) { modalProps.transition = newModalTransition; }\n\n      const newModalTransitionOptions = typeof data?.modalOptions?.transitionOptions === 'object' ?\n       data.modalOptions.transitionOptions : s_MODAL_TRANSITION_OPTIONS;\n\n      if (newModalTransitionOptions !== modalProps.transitionOptions)\n      {\n         modalProps.transitionOptions = newModalTransitionOptions;\n      }\n   }\n</script>\n\n<svelte:options accessors={true}/>\n\n{#if modal}\n   <TJSGlassPane id={foundryApp.id} stopPropagation={false} {...modalProps} {zIndex}>\n      <ApplicationShell bind:elementRoot {...appProps}>\n         <DialogContent {data} />\n      </ApplicationShell>\n   </TJSGlassPane>\n{:else}\n   <ApplicationShell bind:elementRoot {...appProps}>\n      <DialogContent {data} />\n   </ApplicationShell>\n{/if}"],"names":[],"mappings":"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"}