import{get_current_component as t,set_current_component as n}from"/modules/typhonjs/svelte/internal.js";function e(){}function o(t){return t()}function s(t){t.forEach(o)}function r(n){t().$$.before_update.push(n)}function c(n){t().$$.on_mount.push(n)}function u(n){t().$$.after_update.push(n)}function i(n){t().$$.on_destroy.push(n)}function a(){const n=t();return(t,e)=>{const o=n.$$.callbacks[t];if(o){const s=function(t,n,e=!1){const o=document.createEvent("CustomEvent");return o.initCustomEvent(t,e,!1,n),o}(t,e);o.slice().forEach((t=>{t.call(n,s)}))}}}function $(n,e){t().$$.context.set(n,e)}function l(n){return t().$$.context.get(n)}function f(){return t().$$.context}function h(n){return t().$$.context.has(n)}const d=[],p=[],g=[],m=[],y=Promise.resolve();let _=!1;function x(){return _||(_=!0,y.then(k)),y}function b(t){g.push(t)}let v=!1;const E=new Set;function k(){if(!v){v=!0;do{for(let t=0;t<d.length;t+=1){const e=d[t];n(e),w(e.$$)}for(n(null),d.length=0;p.length;)p.pop()();for(let t=0;t<g.length;t+=1){const n=g[t];E.has(n)||(E.add(n),n())}g.length=0}while(d.length);for(;m.length;)m.pop()();_=!1,v=!1,E.clear()}}function w(t){if(null!==t.fragment){t.update(),s(t.before_update);const n=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,n),t.after_update.forEach(b)}}class j extends class{$destroy(){!function(t,n){const e=t.$$;null!==e.fragment&&(s(e.on_destroy),e.fragment&&e.fragment.d(1),e.on_destroy=e.fragment=null,e.ctx=[])}(this),this.$destroy=e}$on(t,n){const e=this.$$.callbacks[t]||(this.$$.callbacks[t]=[]);return e.push(n),()=>{const t=e.indexOf(n);-1!==t&&e.splice(t,1)}}$set(t){var n;this.$$set&&(n=t,0!==Object.keys(n).length)&&(this.$$.skip_bound=!0,this.$$set(t),this.$$.skip_bound=!1)}}{constructor(t){if(!t||!t.target&&!t.$$inline)throw new Error("'target' is a required option");super()}$destroy(){super.$destroy(),this.$destroy=()=>{console.warn("Component was already destroyed")}}$capture_state(){}$inject_state(){}}class C extends j{constructor(t){super(t)}}export{j as SvelteComponent,C as SvelteComponentTyped,u as afterUpdate,r as beforeUpdate,a as createEventDispatcher,f as getAllContexts,l as getContext,h as hasContext,i as onDestroy,c as onMount,$ as setContext,x as tick};
