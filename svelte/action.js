function draggable(e,{positionable:t,booleanStore:n}){let r=null,o={},a=0,i=n;const s={dragDown:["pointerdown",e=>{return(n=e).preventDefault(),r=foundry.utils.duplicate(t.position),o={x:n.clientX,y:n.clientY},globalThis.addEventListener(...s.dragMove),void globalThis.addEventListener(...s.dragUp);var n},!1],dragMove:["pointermove",e=>function(e){if(e.preventDefault(),!i)return;const n=Date.now();n-a<1e3/60||(a=n,t.setPosition({left:r.left+(e.clientX-o.x),top:r.top+(e.clientY-o.y)}))}(e),!1],dragUp:["pointerup",e=>(e.preventDefault(),globalThis.removeEventListener(...s.dragMove),void globalThis.removeEventListener(...s.dragUp)),!1]};function activateListeners(){i=!0,e.addEventListener(...s.dragDown),e.classList.add("draggable")}function removeListeners(){i=!1,e.removeEventListener(...s.dragDown),e.removeEventListener(...s.dragMove),e.removeEventListener(...s.dragUp),e.classList.remove("draggable")}return i&&activateListeners(),{update:({booleanStore:e})=>{e?activateListeners():removeListeners()},destroy:()=>removeListeners()}}export{draggable};
//# sourceMappingURL=action.js.map
