{"version":3,"file":"legacy.js","sources":["../../node_modules/@typhonjs-fvtt/svelte/src/application/legacy/HandlebarsApplication.js","../../node_modules/@typhonjs-utils/object/src/functions.js","../../node_modules/@typhonjs-fvtt/svelte/src/application/GetSvelteData.js","../../node_modules/@typhonjs-fvtt/svelte/src/application/legacy/SvelteFormApplication.js","../../node_modules/@typhonjs-fvtt/svelte/src/application/legacy/HandlebarsFormApplication.js"],"sourcesContent":["import { SvelteApplication }  from '@typhonjs-fvtt/svelte/application';\nimport { ApplicationShell }   from '@typhonjs-fvtt/svelte/component/core';\n\nexport class HandlebarsApplication extends SvelteApplication\n{\n   /**\n    * Temporarily holds the original popOut value when rendering.\n    *\n    * @type {boolean}\n    */\n   #orignalPopOut;\n\n   /**\n    * @inheritDoc\n    */\n   constructor(options)\n   {\n      super(options);\n\n      if (this.popOut)\n      {\n         this.options.svelte = foundry.utils.mergeObject(typeof this.options.svelte === 'object' ?\n          this.options.svelte : {}, {\n            class: ApplicationShell,\n            intro: true,\n            target: document.body\n         });\n      }\n   }\n\n   /**\n    * Temporarily set popOut to false to only render inner HTML. This inner HTML will be appended to the content area\n    * of ApplicationShell if the original popOut value is true.\n    *\n    * @inheritDoc\n    */\n   async _render(force, options)\n   {\n      this.#orignalPopOut = this.options.popOut;\n      this.options.popOut = false;\n      await super._render(force, options);\n      this.options.popOut = this.#orignalPopOut;\n   }\n\n   _injectHTML(html)\n   {\n      // Mounts any Svelte components.\n      super._injectHTML(html);\n\n      // Appends inner HTML content to application shell content element.\n      if (this.svelte?.applicationShell?.elementContent)\n      {\n         this.svelte.applicationShell.elementContent.appendChild(...html);\n      }\n   }\n\n   /**\n    * Override replacing HTML as Svelte components control the rendering process. Only potentially change the outer\n    * application frame / title for pop-out applications.\n    *\n    * @inheritDoc\n    */\n   _replaceHTML(element, html)  // eslint-disable-line no-unused-vars\n   {\n      if (!element.length) { return; }\n\n      super._replaceHTML(element, html);\n\n      if (this.svelte?.applicationShell?.elementContent)\n      {\n         const elementContent = this.svelte.applicationShell.elementContent;\n\n         // Remove existing children.\n         while (elementContent.firstChild && !elementContent.lastChild.remove()) {} // eslint-disable-line no-empty\n\n         elementContent.appendChild(...html);\n\n         // Use the setter from `SvelteFormApplication` to set the title store.\n         this.title = this.title; // eslint-disable-line no-self-assign\n      }\n      else\n      {\n         element.replaceWith(html);\n         this._element = html;\n         this.elementTarget = html[0];\n      }\n   }\n}\n","/**\r\n * Provides common object manipulation utilities including depth traversal, obtaining accessors, safely setting values /\r\n * equality tests, and validation.\r\n */\r\n\r\nconst s_TAG_MAP = '[object Map]';\r\nconst s_TAG_SET = '[object Set]';\r\nconst s_TAG_STRING = '[object String]';\r\n\r\n/**\r\n * @typedef {object} ValidationEntry - Provides data for a validation check.\r\n *\r\n * @property {string}               [type] - Optionally tests with a typeof check.\r\n *\r\n * @property {Array<*>|Function|Set<*>}  [expected] - Optional array, function, or set of expected values to test\r\n * against.\r\n *\r\n * @property {string}               [message] - Optional message to include.\r\n *\r\n * @property {boolean}              [required=true] - When false if the accessor is missing validation is skipped.\r\n *\r\n * @property {boolean}              [error=true] - When true and error is thrown otherwise a boolean is returned.\r\n */\r\n\r\n/**\r\n * Freezes all entries traversed that are objects including entries in arrays.\r\n *\r\n * @param {object|Array}   data - An object or array.\r\n *\r\n * @param {string[]}       skipFreezeKeys - An array of strings indicating keys of objects to not freeze.\r\n *\r\n * @returns {object|Array} The frozen object.\r\n */\r\nexport function deepFreeze(data, skipFreezeKeys = [])\r\n{\r\n   /* istanbul ignore if */\r\n   if (typeof data !== 'object') { throw new TypeError(`'data' is not an 'object'.`); }\r\n\r\n   /* istanbul ignore if */\r\n   if (!Array.isArray(skipFreezeKeys)) { throw new TypeError(`'skipFreezeKeys' is not an 'array'.`); }\r\n\r\n   return _deepFreeze(data, skipFreezeKeys);\r\n}\r\n\r\n/**\r\n * Performs a naive depth traversal of an object / array. The data structure _must not_ have circular references.\r\n * The result of the callback function is used to modify in place the given data.\r\n *\r\n * @param {object|Array}   data - An object or array.\r\n *\r\n * @param {Function}       func - A callback function to process leaf values in children arrays or object members.\r\n *\r\n * @param {boolean}        modify - If true then the result of the callback function is used to modify in place\r\n *                                  the given data.\r\n *\r\n * @returns {*} The data object.\r\n */\r\nexport function depthTraverse(data, func, modify = false)\r\n{\r\n   /* istanbul ignore if */\r\n   if (typeof data !== 'object') { throw new TypeError(`'data' is not an 'object'.`); }\r\n\r\n   /* istanbul ignore if */\r\n   if (typeof func !== 'function') { throw new TypeError(`'func' is not a 'function'.`); }\r\n\r\n   return _depthTraverse(data, func, modify);\r\n}\r\n\r\n/**\r\n * Returns a list of accessor keys by traversing the given object.\r\n *\r\n * @param {object}   data - An object to traverse for accessor keys.\r\n *\r\n * @returns {string[]} Accessor list.\r\n */\r\nexport function getAccessorList(data)\r\n{\r\n   if (typeof data !== 'object') { throw new TypeError(`getAccessorList error: 'data' is not an 'object'.`); }\r\n\r\n   return _getAccessorList(data);\r\n}\r\n\r\n/**\r\n * Tests for whether an object is iterable.\r\n *\r\n * @param {object} object - An object.\r\n *\r\n * @returns {boolean} Whether object is iterable.\r\n */\r\nexport function isIterable(object)\r\n{\r\n   if (object === null || object === void 0 || typeof object !== 'object') { return false; }\r\n\r\n   return typeof object[Symbol.iterator] === 'function';\r\n}\r\n\r\n/**\r\n * Tests for whether an object is async iterable.\r\n *\r\n * @param {object} object - An object.\r\n *\r\n * @returns {boolean} Whether object is async iterable.\r\n */\r\nexport function isIterableAsync(object)\r\n{\r\n   if (object === null || object === void 0 || typeof object !== 'object') { return false; }\r\n\r\n   return typeof object[Symbol.asyncIterator] === 'function';\r\n}\r\n\r\n/**\r\n * Tests for whether object is not null and a typeof object.\r\n *\r\n * @param {object} object - An object.\r\n *\r\n * @returns {boolean} Is it an object.\r\n */\r\nexport function isObject(object)\r\n{\r\n   return object !== null && typeof object === 'object';\r\n}\r\n\r\n/**\r\n * Safely returns keys on an object or an empty array if not an object.\r\n *\r\n * @param {object} object - An object.\r\n *\r\n * @returns {string[]} Object keys\r\n */\r\nexport function objectKeys(object)\r\n{\r\n   return object !== null && typeof object === 'object' ? Object.keys(object) : [];\r\n}\r\n\r\n/**\r\n * Safely returns an objects size. Note for String objects unicode is not taken into consideration.\r\n *\r\n * @param {object} object - An object.\r\n *\r\n * @returns {number} Size of object.\r\n */\r\nexport function objectSize(object)\r\n{\r\n   if (object === void 0 || object === null || typeof object !== 'object') { return 0; }\r\n\r\n   const tag = Object.prototype.toString.call(object);\r\n\r\n   if (tag === s_TAG_MAP || tag === s_TAG_SET) { return object.size; }\r\n\r\n   if (tag === s_TAG_STRING) { return object.length; }\r\n\r\n   return Object.keys(object).length;\r\n}\r\n\r\n/**\r\n * Provides a way to safely access an objects data / entries given an accessor string which describes the\r\n * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\r\n * to walk.\r\n *\r\n * @param {object}   data - An object to access entry data.\r\n *\r\n * @param {string}   accessor - A string describing the entries to access.\r\n *\r\n * @param {*}        defaultValue - (Optional) A default value to return if an entry for accessor is not found.\r\n *\r\n * @returns {object} The data object.\r\n */\r\nexport function safeAccess(data, accessor, defaultValue = void 0)\r\n{\r\n   if (typeof data !== 'object') { return defaultValue; }\r\n   if (typeof accessor !== 'string') { return defaultValue; }\r\n\r\n   const access = accessor.split('.');\r\n\r\n   // Walk through the given object by the accessor indexes.\r\n   for (let cntr = 0; cntr < access.length; cntr++)\r\n   {\r\n      // If the next level of object access is undefined or null then return the empty string.\r\n      if (typeof data[access[cntr]] === 'undefined' || data[access[cntr]] === null) { return defaultValue; }\r\n\r\n      data = data[access[cntr]];\r\n   }\r\n\r\n   return data;\r\n}\r\n\r\n/**\r\n * Provides a way to safely batch set an objects data / entries given an array of accessor strings which describe the\r\n * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\r\n * to walk. If value is an object the accessor will be used to access a target value from `value` which is\r\n * subsequently set to `data` by the given operation. If `value` is not an object it will be used as the target\r\n * value to set across all accessors.\r\n *\r\n * @param {object}         data - An object to access entry data.\r\n *\r\n * @param {Array<string>}  accessors - A string describing the entries to access.\r\n *\r\n * @param {object|*}       value - A new value to set if an entry for accessor is found.\r\n *\r\n * @param {string}         [operation='set'] - Operation to perform including: 'add', 'div', 'mult', 'set',\r\n *                                             'set-undefined', 'sub'.\r\n *\r\n * @param {object|*}       [defaultAccessValue=0] - A new value to set if an entry for accessor is found.\r\n *\r\n *\r\n * @param {boolean}  [createMissing=true] - If true missing accessor entries will be created as objects\r\n *                                          automatically.\r\n */\r\nexport function safeBatchSet(data, accessors, value, operation = 'set', defaultAccessValue = 0, createMissing = true)\r\n{\r\n   if (typeof data !== 'object') { throw new TypeError(`safeBatchSet Error: 'data' is not an 'object'.`); }\r\n   if (!Array.isArray(accessors)) { throw new TypeError(`safeBatchSet Error: 'accessors' is not an 'array'.`); }\r\n\r\n   if (typeof value === 'object')\r\n   {\r\n      accessors.forEach((accessor) =>\r\n      {\r\n         const targetValue = safeAccess(value, accessor, defaultAccessValue);\r\n         safeSet(data, accessor, targetValue, operation, createMissing);\r\n      });\r\n   }\r\n   else\r\n   {\r\n      accessors.forEach((accessor) =>\r\n      {\r\n         safeSet(data, accessor, value, operation, createMissing);\r\n      });\r\n   }\r\n}\r\n\r\n/**\r\n * Compares a source object and values of entries against a target object. If the entries in the source object match\r\n * the target object then `true` is returned otherwise `false`. If either object is undefined or null then false\r\n * is returned.\r\n *\r\n * @param {object}   source - Source object.\r\n *\r\n * @param {object}   target - Target object.\r\n *\r\n * @returns {boolean} True if equal.\r\n */\r\nexport function safeEqual(source, target)\r\n{\r\n   if (typeof source === 'undefined' || source === null || typeof target === 'undefined' || target === null)\r\n   {\r\n      return false;\r\n   }\r\n\r\n   const sourceAccessors = getAccessorList(source);\r\n\r\n   for (let cntr = 0; cntr < sourceAccessors.length; cntr++)\r\n   {\r\n      const accessor = sourceAccessors[cntr];\r\n\r\n      const sourceObjectValue = safeAccess(source, accessor);\r\n      const targetObjectValue = safeAccess(target, accessor);\r\n\r\n      if (sourceObjectValue !== targetObjectValue) { return false; }\r\n   }\r\n\r\n   return true;\r\n}\r\n\r\n/**\r\n * Provides a way to safely set an objects data / entries given an accessor string which describes the\r\n * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\r\n * to walk.\r\n *\r\n * @param {object}   data - An object to access entry data.\r\n *\r\n * @param {string}   accessor - A string describing the entries to access.\r\n *\r\n * @param {*}        value - A new value to set if an entry for accessor is found.\r\n *\r\n * @param {string}   [operation='set'] - Operation to perform including: 'add', 'div', 'mult', 'set',\r\n *                                       'set-undefined', 'sub'.\r\n *\r\n * @param {boolean}  [createMissing=true] - If true missing accessor entries will be created as objects\r\n *                                          automatically.\r\n *\r\n * @returns {boolean} True if successful.\r\n */\r\nexport function safeSet(data, accessor, value, operation = 'set', createMissing = true)\r\n{\r\n   if (typeof data !== 'object') { throw new TypeError(`safeSet Error: 'data' is not an 'object'.`); }\r\n   if (typeof accessor !== 'string') { throw new TypeError(`safeSet Error: 'accessor' is not a 'string'.`); }\r\n\r\n   const access = accessor.split('.');\r\n\r\n   // Walk through the given object by the accessor indexes.\r\n   for (let cntr = 0; cntr < access.length; cntr++)\r\n   {\r\n      // If data is an array perform validation that the accessor is a positive integer otherwise quit.\r\n      if (Array.isArray(data))\r\n      {\r\n         const number = (+access[cntr]);\r\n\r\n         if (!Number.isInteger(number) || number < 0) { return false; }\r\n      }\r\n\r\n      if (cntr === access.length - 1)\r\n      {\r\n         switch (operation)\r\n         {\r\n            case 'add':\r\n               data[access[cntr]] += value;\r\n               break;\r\n\r\n            case 'div':\r\n               data[access[cntr]] /= value;\r\n               break;\r\n\r\n            case 'mult':\r\n               data[access[cntr]] *= value;\r\n               break;\r\n\r\n            case 'set':\r\n               data[access[cntr]] = value;\r\n               break;\r\n\r\n            case 'set-undefined':\r\n               if (typeof data[access[cntr]] === 'undefined') { data[access[cntr]] = value; }\r\n               break;\r\n\r\n            case 'sub':\r\n               data[access[cntr]] -= value;\r\n               break;\r\n         }\r\n      }\r\n      else\r\n      {\r\n         // If createMissing is true and the next level of object access is undefined then create a new object entry.\r\n         if (createMissing && typeof data[access[cntr]] === 'undefined') { data[access[cntr]] = {}; }\r\n\r\n         // Abort if the next level is null or not an object and containing a value.\r\n         if (data[access[cntr]] === null || typeof data[access[cntr]] !== 'object') { return false; }\r\n\r\n         data = data[access[cntr]];\r\n      }\r\n   }\r\n\r\n   return true;\r\n}\r\n\r\n/**\r\n * Performs bulk setting of values to the given data object.\r\n *\r\n * @param {object}            data - The data object to set data.\r\n *\r\n * @param {object<string, *>} accessorValues - Object of accessor keys to values to set.\r\n *\r\n * @param {string}            [operation='set'] - Operation to perform including: 'add', 'div', 'mult', 'set', 'sub';\r\n *                                                default (`set`).\r\n *\r\n * @param {boolean}           [createMissing=true] - If true missing accessor entries will be created as objects\r\n *                                                   automatically.\r\n */\r\nexport function safeSetAll(data, accessorValues, operation = 'set', createMissing = true)\r\n{\r\n   if (typeof data !== 'object') { throw new TypeError(`'data' is not an 'object'.`); }\r\n   if (typeof accessorValues !== 'object') { throw new TypeError(`'accessorValues' is not an 'object'.`); }\r\n\r\n   for (const accessor of Object.keys(accessorValues))\r\n   {\r\n      if (!accessorValues.hasOwnProperty(accessor)) { continue; } // eslint-disable-line no-prototype-builtins\r\n\r\n      safeSet(data, accessor, accessorValues[accessor], operation, createMissing);\r\n   }\r\n}\r\n\r\n/**\r\n * Performs bulk validation of data given an object, `validationData`, which describes all entries to test.\r\n *\r\n * @param {object}                           data - The data object to test.\r\n *\r\n * @param {object<string, ValidationEntry>}  validationData - Key is the accessor / value is a validation entry.\r\n *\r\n * @param {string}                           [dataName='data'] - Optional name of data.\r\n *\r\n * @returns {boolean} True if validation passes otherwise an exception is thrown.\r\n */\r\nexport function validate(data, validationData = {}, dataName = 'data')\r\n{\r\n   if (typeof data !== 'object') { throw new TypeError(`'${dataName}' is not an 'object'.`); }\r\n   if (typeof validationData !== 'object') { throw new TypeError(`'validationData' is not an 'object'.`); }\r\n\r\n   let result;\r\n\r\n   for (const key of Object.keys(validationData))\r\n   {\r\n      if (!validationData.hasOwnProperty(key)) { continue; } // eslint-disable-line no-prototype-builtins\r\n\r\n      const entry = validationData[key];\r\n\r\n      switch (entry.test)\r\n      {\r\n         case 'array':\r\n            result = validateArray(data, key, entry, dataName);\r\n            break;\r\n\r\n         case 'entry':\r\n            result = validateEntry(data, key, entry, dataName);\r\n            break;\r\n\r\n         case 'entry|array':\r\n            result = validateEntryOrArray(data, key, entry, dataName);\r\n            break;\r\n      }\r\n   }\r\n\r\n   return result;\r\n}\r\n\r\n/**\r\n * Validates all array entries against potential type and expected tests.\r\n *\r\n * @param {object}            data - The data object to test.\r\n *\r\n * @param {string}            accessor - A string describing the entries to access.\r\n *\r\n * @param {object}            opts - Options object.\r\n *\r\n * @param {string}            [opts.type] - Tests with a typeof check.\r\n *\r\n * @param {Function|Set<*>}   [opts.expected] - Optional function or set of expected values to test against.\r\n *\r\n * @param {string}            [opts.message] - Optional message to include.\r\n *\r\n * @param {boolean}           [opts.required] - When false if the accessor is missing validation is skipped.\r\n *\r\n * @param {boolean}           [opts.error=true] - When true and error is thrown otherwise a boolean is returned.\r\n *\r\n * @param {string}            [dataName='data'] - Optional name of data.\r\n *\r\n * @returns {boolean} True if validation passes otherwise an exception is thrown.\r\n */\r\nexport function validateArray(data, accessor, { type = void 0, expected = void 0, message = void 0, required = true,\r\n error = true } = {}, dataName = 'data')\r\n{\r\n   const dataArray = safeAccess(data, accessor);\r\n\r\n   // A non-required entry is missing so return without validation.\r\n   if (!required && typeof dataArray === 'undefined') { return true; }\r\n\r\n   if (!Array.isArray(dataArray))\r\n   {\r\n      if (error)\r\n      {\r\n         throw _validateError(TypeError, `'${dataName}.${accessor}' is not an 'array'.`);\r\n      }\r\n      else\r\n      {\r\n         return false;\r\n      }\r\n   }\r\n\r\n   if (typeof type === 'string')\r\n   {\r\n      for (let cntr = 0; cntr < dataArray.length; cntr++)\r\n      {\r\n         if (!(typeof dataArray[cntr] === type))\r\n         {\r\n            if (error)\r\n            {\r\n               const dataEntryString = typeof dataArray[cntr] === 'object' ? JSON.stringify(dataArray[cntr]) :\r\n                dataArray[cntr];\r\n\r\n               throw _validateError(TypeError,\r\n                `'${dataName}.${accessor}[${cntr}]': '${dataEntryString}' is not a '${type}'.`);\r\n            }\r\n            else\r\n            {\r\n               return false;\r\n            }\r\n         }\r\n      }\r\n   }\r\n\r\n   // If expected is a function then test all array entries against the test function. If expected is a Set then\r\n   // test all array entries for inclusion in the set. Otherwise if expected is a string then test that all array\r\n   // entries as a `typeof` test against expected.\r\n   if (Array.isArray(expected))\r\n   {\r\n      for (let cntr = 0; cntr < dataArray.length; cntr++)\r\n      {\r\n         if (!expected.includes(dataArray[cntr]))\r\n         {\r\n            if (error)\r\n            {\r\n               const dataEntryString = typeof dataArray[cntr] === 'object' ? JSON.stringify(dataArray[cntr]) :\r\n                dataArray[cntr];\r\n\r\n               throw _validateError(Error, `'${dataName}.${accessor}[${cntr}]': '${\r\n                dataEntryString}' is not an expected value: ${JSON.stringify(expected)}.`);\r\n            }\r\n            else\r\n            {\r\n               return false;\r\n            }\r\n         }\r\n      }\r\n   }\r\n   else if (expected instanceof Set)\r\n   {\r\n      for (let cntr = 0; cntr < dataArray.length; cntr++)\r\n      {\r\n         if (!expected.has(dataArray[cntr]))\r\n         {\r\n            if (error)\r\n            {\r\n               const dataEntryString = typeof dataArray[cntr] === 'object' ? JSON.stringify(dataArray[cntr]) :\r\n                dataArray[cntr];\r\n\r\n               throw _validateError(Error, `'${dataName}.${accessor}[${cntr}]': '${\r\n                dataEntryString}' is not an expected value: ${JSON.stringify(expected)}.`);\r\n            }\r\n            else\r\n            {\r\n               return false;\r\n            }\r\n         }\r\n      }\r\n   }\r\n   else if (typeof expected === 'function')\r\n   {\r\n      for (let cntr = 0; cntr < dataArray.length; cntr++)\r\n      {\r\n         try\r\n         {\r\n            const result = expected(dataArray[cntr]);\r\n\r\n            if (typeof result === 'undefined' || !result) { throw new Error(message); }\r\n         }\r\n         catch (err)\r\n         {\r\n            if (error)\r\n            {\r\n               const dataEntryString = typeof dataArray[cntr] === 'object' ? JSON.stringify(dataArray[cntr]) :\r\n                dataArray[cntr];\r\n\r\n               throw _validateError(Error, `'${dataName}.${accessor}[${cntr}]': '${\r\n                dataEntryString}' failed validation: ${err.message}.`);\r\n            }\r\n            else\r\n            {\r\n               return false;\r\n            }\r\n         }\r\n      }\r\n   }\r\n\r\n   return true;\r\n}\r\n\r\n/**\r\n * Validates data entry with a typeof check and potentially tests against the values in any given expected set.\r\n *\r\n * @param {object}            data - The object data to validate.\r\n *\r\n * @param {string}            accessor - A string describing the entries to access.\r\n *\r\n * @param {object}            opts - Options object\r\n *\r\n * @param {string}            [opts.type] - Tests with a typeof check.\r\n *\r\n * @param {Function|Set<*>}   [opts.expected] - Optional function or set of expected values to test against.\r\n *\r\n * @param {string}            [opts.message] - Optional message to include.\r\n *\r\n * @param {boolean}           [opts.required=true] - When false if the accessor is missing validation is skipped.\r\n *\r\n * @param {boolean}           [opts.error=true] - When true and error is thrown otherwise a boolean is returned.\r\n *\r\n * @param {string}            [dataName='data'] - Optional name of data.\r\n *\r\n * @returns {boolean} True if validation passes otherwise an exception is thrown.\r\n */\r\nexport function validateEntry(data, accessor, { type = void 0, expected = void 0, message = void 0, required = true,\r\n error = true } = {}, dataName = 'data')\r\n{\r\n   const dataEntry = safeAccess(data, accessor);\r\n\r\n   // A non-required entry is missing so return without validation.\r\n   if (!required && typeof dataEntry === 'undefined') { return true; }\r\n\r\n   if (type && typeof dataEntry !== type)\r\n   {\r\n      if (error)\r\n      {\r\n         throw _validateError(TypeError, `'${dataName}.${accessor}' is not a '${type}'.`);\r\n      }\r\n      else\r\n      {\r\n         return false;\r\n      }\r\n   }\r\n\r\n   if ((expected instanceof Set && !expected.has(dataEntry)) ||\r\n    (Array.isArray(expected) && !expected.includes(dataEntry)))\r\n   {\r\n      if (error)\r\n      {\r\n         const dataEntryString = typeof dataEntry === 'object' ? JSON.stringify(dataEntry) : dataEntry;\r\n\r\n         throw _validateError(Error, `'${dataName}.${accessor}': '${dataEntryString}' is not an expected value: ${\r\n          JSON.stringify(expected)}.`);\r\n      }\r\n      else\r\n      {\r\n         return false;\r\n      }\r\n   }\r\n   else if (typeof expected === 'function')\r\n   {\r\n      try\r\n      {\r\n         const result = expected(dataEntry);\r\n\r\n         if (typeof result === 'undefined' || !result) { throw new Error(message); }\r\n      }\r\n      catch (err)\r\n      {\r\n         if (error)\r\n         {\r\n            const dataEntryString = typeof dataEntry === 'object' ? JSON.stringify(dataEntry) : dataEntry;\r\n\r\n            throw _validateError(Error, `'${dataName}.${accessor}': '${dataEntryString}' failed to validate: ${\r\n             err.message}.`);\r\n         }\r\n         else\r\n         {\r\n            return false;\r\n         }\r\n      }\r\n   }\r\n\r\n   return true;\r\n}\r\n\r\n/**\r\n * Dispatches validation of data entry to string or array validation depending on data entry type.\r\n *\r\n * @param {object}            data - The data object to test.\r\n *\r\n * @param {string}            accessor - A string describing the entries to access.\r\n *\r\n * @param {ValidationEntry}   [entry] - A validation entry.\r\n *\r\n * @param {string}            [dataName='data'] - Optional name of data.\r\n *\r\n * @returns {boolean} True if validation passes otherwise an exception is thrown.\r\n */\r\nexport function validateEntryOrArray(data, accessor, entry, dataName = 'data')\r\n{\r\n   const dataEntry = safeAccess(data, accessor);\r\n\r\n   let result;\r\n\r\n   if (Array.isArray(dataEntry))\r\n   {\r\n      result = validateArray(data, accessor, entry, dataName);\r\n   }\r\n   else\r\n   {\r\n      result = validateEntry(data, accessor, entry, dataName);\r\n   }\r\n\r\n   return result;\r\n}\r\n\r\n// Module private ---------------------------------------------------------------------------------------------------\r\n\r\n/**\r\n * Private implementation of depth traversal.\r\n *\r\n * @param {object|Array}   data - An object or array.\r\n *\r\n * @param {string[]}       skipFreezeKeys - An array of strings indicating keys of objects to not freeze.\r\n *\r\n * @returns {*} The frozen object.\r\n * @ignore\r\n * @private\r\n */\r\nfunction _deepFreeze(data, skipFreezeKeys)\r\n{\r\n   if (Array.isArray(data))\r\n   {\r\n      for (let cntr = 0; cntr < data.length; cntr++) { _deepFreeze(data[cntr], skipFreezeKeys); }\r\n   }\r\n   else if (typeof data === 'object')\r\n   {\r\n      for (const key in data)\r\n      {\r\n         // eslint-disable-next-line no-prototype-builtins\r\n         if (data.hasOwnProperty(key) && !skipFreezeKeys.includes(key)) { _deepFreeze(data[key], skipFreezeKeys); }\r\n      }\r\n   }\r\n\r\n   return Object.freeze(data);\r\n}\r\n\r\n/**\r\n * Private implementation of depth traversal.\r\n *\r\n * @param {object|Array}   data - An object or array.\r\n *\r\n * @param {Function}       func - A callback function to process leaf values in children arrays or object members.\r\n *\r\n * @param {boolean}        modify - If true then the result of the callback function is used to modify in place\r\n *                                  the given data.\r\n *\r\n * @returns {*} The data object.\r\n * @ignore\r\n * @private\r\n */\r\nfunction _depthTraverse(data, func, modify)\r\n{\r\n   if (modify)\r\n   {\r\n      if (Array.isArray(data))\r\n      {\r\n         for (let cntr = 0; cntr < data.length; cntr++)\r\n         {\r\n            data[cntr] = _depthTraverse(data[cntr], func, modify);\r\n         }\r\n      }\r\n      else if (typeof data === 'object')\r\n      {\r\n         for (const key in data)\r\n         {\r\n            // eslint-disable-next-line no-prototype-builtins\r\n            if (data.hasOwnProperty(key)) { data[key] = _depthTraverse(data[key], func, modify); }\r\n         }\r\n      }\r\n      else\r\n      {\r\n         data = func(data);\r\n      }\r\n   }\r\n   else\r\n   {\r\n      if (Array.isArray(data))\r\n      {\r\n         for (let cntr = 0; cntr < data.length; cntr++) { _depthTraverse(data[cntr], func, modify); }\r\n      }\r\n      else if (typeof data === 'object')\r\n      {\r\n         for (const key in data)\r\n         {\r\n            // eslint-disable-next-line no-prototype-builtins\r\n            if (data.hasOwnProperty(key)) { _depthTraverse(data[key], func, modify); }\r\n         }\r\n      }\r\n      else\r\n      {\r\n         func(data);\r\n      }\r\n   }\r\n\r\n   return data;\r\n}\r\n\r\n/**\r\n * Private implementation of `getAccessorList`.\r\n *\r\n * @param {object}   data - An object to traverse.\r\n *\r\n * @returns {string[]} Accessor list.\r\n * @ignore\r\n * @private\r\n */\r\nfunction _getAccessorList(data)\r\n{\r\n   const accessors = [];\r\n\r\n   for (const key in data)\r\n   {\r\n      if (data.hasOwnProperty(key)) // eslint-disable-line no-prototype-builtins\r\n      {\r\n         if (typeof data[key] === 'object')\r\n         {\r\n            const childKeys = _getAccessorList(data[key]);\r\n\r\n            childKeys.forEach((childKey) =>\r\n            {\r\n               accessors.push(Array.isArray(childKey) ? `${key}.${childKey.join('.')}` : `${key}.${childKey}`);\r\n            });\r\n         }\r\n         else\r\n         {\r\n            accessors.push(key);\r\n         }\r\n      }\r\n   }\r\n\r\n   return accessors;\r\n}\r\n\r\n/**\r\n * Creates a new error of type `clazz` adding the field `_objectValidateError` set to true.\r\n *\r\n * @param {Error}    clazz - Error class to instantiate.\r\n *\r\n * @param {string}   message - An error message.\r\n *\r\n * @returns {*} Error of the clazz.\r\n * @ignore\r\n * @private\r\n */\r\nfunction _validateError(clazz, message = void 0)\r\n{\r\n   const error = new clazz(message);\r\n   error._objectValidateError = true;\r\n   return error;\r\n}\r\n","/**\n * Provides a helper class for {@link SvelteApplication} by combining all methods that work on the {@link SvelteData[]}\n * of mounted components. This class is instantiated and can be retrieved by the getter `svelte` via SvelteApplication.\n */\nclass GetSvelteData\n{\n   /**\n    * @type {ApplicationShell[]|null[]}\n    */\n   #applicationShellHolder;\n\n   /**\n    * @type {SvelteData[]}\n    */\n   #svelteData;\n\n   /**\n    * Keep a direct reference to the SvelteData array in an associated {@link SvelteApplication}.\n    *\n    * @param {ApplicationShell[]|null[]}  applicationShellHolder - A reference to the ApplicationShell array.\n    *\n    * @param {SvelteData[]}  svelteData - A reference to the SvelteData array of mounted components.\n    */\n   constructor(applicationShellHolder, svelteData)\n   {\n      this.#applicationShellHolder = applicationShellHolder;\n      this.#svelteData = svelteData;\n   }\n\n   /**\n    * Returns any mounted {@link ApplicationShell}.\n    *\n    * @returns {ApplicationShell|null} Any mounted application shell.\n    */\n   get applicationShell() { return this.#applicationShellHolder[0]; }\n\n   /**\n    * Returns the indexed Svelte component.\n    *\n    * @param {number}   index -\n    *\n    * @returns {object} The loaded Svelte component.\n    */\n   component(index)\n   {\n      const data = this.#svelteData[index];\n      return typeof data === 'object' ? data?.component : void 0;\n   }\n\n   /**\n    * Returns the Svelte component entries iterator.\n    *\n    * @returns {Generator<(number|*)[], void, *>} Svelte component entries iterator.\n    * @yields\n    */\n   *componentEntries()\n   {\n      for (let cntr = 0; cntr < this.#svelteData.length; cntr++)\n      {\n         yield [cntr, this.#svelteData[cntr].component];\n      }\n   }\n\n   /**\n    * Returns the Svelte component values iterator.\n    *\n    * @returns {Generator<*, void, *>} Svelte component values iterator.\n    * @yields\n    */\n   *componentValues()\n   {\n      for (let cntr = 0; cntr < this.#svelteData.length; cntr++)\n      {\n         yield this.#svelteData[cntr].component;\n      }\n   }\n\n   /**\n    * Returns the indexed SvelteData entry.\n    *\n    * @param {number}   index -\n    *\n    * @returns {object} The loaded Svelte config + component.\n    */\n   data(index)\n   {\n      return this.#svelteData[index];\n   }\n\n   /**\n    * Returns the SvelteData entries iterator.\n    *\n    * @returns {IterableIterator<[number, Object]>} SvelteData entries iterator.\n    */\n   dataEntries()\n   {\n      return this.#svelteData.entries();\n   }\n\n   /**\n    * Returns the SvelteData values iterator.\n    *\n    * @returns {IterableIterator<Object>} SvelteData values iterator.\n    */\n   dataValues()\n   {\n      return this.#svelteData.values();\n   }\n\n   get length()\n   {\n      return this.#svelteData.length;\n   }\n}\n\nObject.freeze(GetSvelteData);\n\nexport { GetSvelteData };\n\n/**\n * @typedef {object} SvelteData\n *\n * @property {object}            config -\n *\n * @property {SvelteComponent}   component -\n *\n * @property {HTMLElement}       element -\n *\n * @property {Eventbus}          eventbus -\n */\n","import { derived, writable }     from 'svelte/store';\nimport { safeAccess, safeSet }   from '@typhonjs-utils/object';\n\nimport {\n   hasGetter,\n   isApplicationShell,\n   outroAndDestroy,\n   parseSvelteConfig }           from '@typhonjs-fvtt/svelte/util';\n\nimport { GetSvelteData }         from '../GetSvelteData.js';\n\n/**\n * Provides a Svelte aware extension to FormApplication to control the app lifecycle appropriately.\n *\n * NOTE: THIS IS ONLY TO BE USED FOR {@link HandlebarsFormApplication}.\n *\n * @see SvelteApplication\n */\nexport class SvelteFormApplication extends FormApplication\n{\n   /**\n    * Stores the first mounted component which follows the application shell contract.\n    *\n    * @type {ApplicationShell|null[]} Application shell.\n    */\n   #applicationShellHolder = [null];\n\n   /**\n    * Get the current application shell.\n    *\n    * @returns {ApplicationShell|null} The first mounted component which follows the application shell contract.\n    */\n   get #applicationShell() { return this.#applicationShellHolder[0]; }\n\n   /**\n    * Stores the target element which may not necessarily be the main element.\n    *\n    * @type {HTMLElement}\n    */\n   #elementTarget = null;\n\n   /**\n    * Stores the content element which is set for application shells.\n    *\n    * @type {HTMLElement}\n    */\n   #elementContent = null;\n\n   /**\n    * The Application option store which is injected into mounted Svelte component context under the `external` key.\n    *\n    * @type {StoreAppOptions}\n    */\n   #storeAppOptions;\n\n   /**\n    * Stores the update function for `#storeAppOptions`.\n    *\n    * @type {import('svelte/store').Writable.update}\n    */\n   #storeAppOptionsUpdate;\n\n   /**\n    * The UI option store which is injected into mounted Svelte component context under the `external` key.\n    *\n    * @type {StoreUIOptions}\n    */\n   #storeUIOptions;\n\n   /**\n    * Stores the update function for `#storeUIOptions`.\n    *\n    * @type {import('svelte/store').Writable.update}\n    */\n   #storeUIOptionsUpdate;\n\n   /**\n    * Stores the unsubscribe functions from local store subscriptions.\n    *\n    * @type {import('svelte/store').Unsubscriber[]}\n    */\n   #storeUnsubscribe = [];\n\n   /**\n    * Stores SvelteData entries with instantiated Svelte components.\n    *\n    * @type {SvelteData[]}\n    */\n   #svelteData = [];\n\n   /**\n    * Provides a helper class that combines multiple methods for interacting with the mounted components tracked in\n    * {@link #svelteData}.\n    *\n    * @type {GetSvelteData}\n    */\n   #getSvelteData = new GetSvelteData(this.#applicationShellHolder, this.#svelteData);\n\n   /**\n    * @inheritDoc\n    */\n   constructor(object, options)\n   {\n      super(object, options);\n\n      this.#storesInitialize();\n   }\n\n   /**\n    * Specifies the default options that SvelteApplication supports.\n    *\n    * @returns {object} options - Application options.\n    * @see https://foundryvtt.com/api/Application.html#options\n    */\n   static get defaultOptions()\n   {\n      return foundry.utils.mergeObject(super.defaultOptions, {\n         draggable: true,              // If true then application shells are draggable.\n         headerButtonNoLabel: false,   // If true then header button labels are removed for application shells.\n         jqueryCloseAnimation: true,   // If false the Foundry JQuery close animation is not run.\n         zIndex: null                  // When set the zIndex is manually controlled.\n      });\n   }\n\n   /**\n    * Returns the draggable app option.\n    *\n    * @returns {boolean} Draggable app option.\n    */\n   get draggable() { return this.options.draggable; }\n\n   /**\n    * Returns the content element if an application shell is mounted.\n    *\n    * @returns {HTMLElement} Content element.\n    */\n   get elementContent() { return this.#elementContent; }\n\n   /**\n    * Returns the target element or main element if no target defined.\n    *\n    * @returns {HTMLElement} Target element.\n    */\n   get elementTarget() { return this.#elementTarget; }\n\n   /**\n    * @inheritDoc\n    */\n   get popOut() { return super.popOut; }\n\n   /**\n    * Returns the resizable option.\n    *\n    * @returns {boolean} Resizable app option.\n    */\n   get resizable() { return this.options.resizable; }\n\n   /**\n    * Returns the Svelte helper class w/ various methods to access mounted Svelte components.\n    *\n    * @returns {GetSvelteData} GetSvelteData\n    */\n   get svelte() { return this.#getSvelteData; }\n\n   /**\n    * Returns the title accessor from the parent Application class.\n    * TODO: Application v2; note that super.title localizes `this.options.title`; IMHO it shouldn't.\n    *\n    * @returns {string} Title.\n    */\n   get title() { return super.title; }\n\n   /**\n    * Returns the zIndex app option.\n    *\n    * @returns {number} z-index app option.\n    */\n   get zIndex() { return this.options.zIndex; }\n\n   /**\n    * Sets `this.options.draggable` which is reactive for application shells.\n    *\n    * @param {boolean}  draggable - Sets the draggable option.\n    */\n   set draggable(draggable)\n   {\n      if (typeof draggable === 'boolean') { this.setOptions('draggable', draggable); }\n   }\n\n   /**\n    * Sets the content element.\n    *\n    * @param {HTMLElement} content - Content element.\n    */\n   set elementContent(content)\n   {\n      if (!(content instanceof HTMLElement))\n      {\n         throw new TypeError(`SvelteFormApplication - set elementContent error: 'content' is not an HTMLElement.`);\n      }\n      this.#elementContent = content;\n   }\n\n   /**\n    * Sets the target element or main element if no target defined.\n    *\n    * @param {HTMLElement} target - Target element.\n    */\n   set elementTarget(target)\n   {\n      if (!(target instanceof HTMLElement))\n      {\n         throw new TypeError(`SvelteFormApplication - set elementTarget error: 'target' is not an HTMLElement.`);\n      }\n      this.#elementTarget = target;\n   }\n\n   /**\n    * Sets `this.options.popOut` which is reactive for application shells. This will add / remove this application\n    * from `ui.windows`.\n    *\n    * @param {boolean}  popOut - Sets the popOut option.\n    */\n   set popOut(popOut)\n   {\n      if (typeof popOut === 'boolean') { this.setOptions('popOut', popOut); }\n   }\n\n   /**\n    * Sets `this.options.resizable` which is reactive for application shells.\n    *\n    * @param {boolean}  resizable - Sets the resizable option.\n    */\n   set resizable(resizable)\n   {\n      if (typeof resizable === 'boolean') { this.setOptions('resizable', resizable); }\n   }\n\n   /**\n    * Sets `this.options.title` which is reactive for application shells.\n    *\n    * @param {string}   title - Application title; will be localized, so a translation key is fine.\n    */\n   set title(title)\n   {\n      if (typeof title === 'string') { this.setOptions('title', title); }\n   }\n\n   /**\n    * Sets `this.options.zIndex` which is reactive for application shells.\n    *\n    * @param {number}   zIndex - Application z-index.\n    */\n   set zIndex(zIndex)\n   {\n      this.setOptions('zIndex', Number.isInteger(zIndex) ? zIndex : null);\n   }\n\n   /**\n    * Note: This method is fully overridden and duplicated as Svelte components need to be destroyed manually and the\n    * best visual result is to destroy them after the default JQuery slide up animation occurs, but before the element\n    * is removed from the DOM.\n    *\n    * If you destroy the Svelte components before the slide up animation the Svelte elements are removed immediately\n    * from the DOM. The purpose of overriding ensures the slide up animation is always completed before\n    * the Svelte components are destroyed and then the element is removed from the DOM.\n    *\n    * Close the application and un-register references to it within UI mappings.\n    * This function returns a Promise which resolves once the window closing animation concludes\n    *\n    * @param {object}   options - Optional parameters.\n    *\n    * @param {boolean}  options.force - Force close regardless of render state.\n    *\n    * @returns {Promise<void|number>}    A Promise which resolves once the application is closed\n    */\n   async close(options = {})\n   {\n      const states = Application.RENDER_STATES;\n      if (!options.force && ![states.RENDERED, states.ERROR].includes(this._state)) { return; }\n\n      // Unsubscribe from any local stores.\n      this.#storesUnsubscribe();\n\n      this._state = states.CLOSING;\n\n      /**\n       * Get the element.\n       *\n       * @type {JQuery}\n       */\n      const el = $(this.#elementTarget);\n      if (!el) { return this._state = states.CLOSED; }\n\n      // Dispatch Hooks for closing the base and subclass applications\n      for (const cls of this.constructor._getInheritanceChain())\n      {\n         /**\n          * A hook event that fires whenever this Application is closed.\n          *\n          * @param {Application} app                     The Application instance being closed\n          *\n          * @param {jQuery[]} html                       The application HTML when it is closed\n          *\n          * @function closeApplication\n          *\n          * @memberof hookEvents\n          */\n         Hooks.call(`close${cls.name}`, this, el);\n      }\n\n      // If options `jqueryCloseAnimation` is false then do not execute the standard JQuery slide up animation.\n      // This allows Svelte components to provide any out transition. Application shells will automatically set\n      // `jqueryCloseAnimation` based on any out transition set or unset.\n      const animate = typeof this.options.jqueryCloseAnimation === 'boolean' ? this.options.jqueryCloseAnimation : true;\n      if (animate)\n      {\n         // Await on JQuery to slide up the main element.\n         el[0].style.minHeight = '0';\n         await new Promise((resolve) => { el.slideUp(200, () => resolve()); });\n      }\n\n      // Stores the Promises returned from running outro transitions and destroying each Svelte component.\n      const svelteDestroyPromises = [];\n\n      // Manually invoke the destroy callbacks for all Svelte components.\n      for (const entry of this.#svelteData)\n      {\n         // Use `outroAndDestroy` to run outro transitions before destroying.\n         svelteDestroyPromises.push(outroAndDestroy(entry.component));\n\n         // If any proxy eventbus has been added then remove all event registrations from the component.\n         const eventbus = entry.config.eventbus;\n         if (typeof eventbus === 'object' && typeof eventbus.off === 'function')\n         {\n            eventbus.off();\n            entry.config.eventbus = void 0;\n         }\n      }\n\n      // Await all Svelte components to destroy.\n      await Promise.all(svelteDestroyPromises);\n\n      // Reset SvelteData like this to maintain reference to GetSvelteData / `this.svelte`.\n      this.#svelteData.length = 0;\n\n      // Use JQuery to remove `this._element` from the DOM. Most SvelteComponents have already removed it.\n      el.remove();\n\n      // Clean up data\n      this.#applicationShellHolder[0] = null;\n      this._element = null;\n      this.#elementContent = null;\n      this.#elementTarget = null;\n      delete ui.windows[this.appId];\n      this._minimized = false;\n      this._scrollPositions = null;\n      this._state = states.CLOSED;\n\n      // Update the minimized UI store options.\n      this.#storeUIOptionsUpdate((storeOptions) => foundry.utils.mergeObject(storeOptions, {\n         minimized: this._minimized\n      }));\n   }\n\n   /**\n    * Provides a way to safely get this applications options given an accessor string which describes the\n    * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n    * to walk.\n    *\n    * // TODO DOCUMENT the accessor in more detail.\n    *\n    * @param {string}   accessor - The path / key to set. You can set multiple levels.\n    *\n    * @param {*}        [defaultValue] - A default value returned if the accessor is not found.\n    *\n    * @returns {*} Value at the accessor.\n    */\n   getOptions(accessor, defaultValue)\n   {\n      return safeAccess(this.options, accessor, defaultValue);\n   }\n\n   /**\n    * Inject the Svelte components defined in `this.options.svelte`. The Svelte component can attach to the existing\n    * pop-out of Application or provide no template and render into a document fragment which is then attached to the\n    * DOM.\n    *\n    * @param {JQuery} html -\n    *\n    * @inheritDoc\n    */\n   _injectHTML(html)\n   {\n      if (this.popOut && html.length === 0 && Array.isArray(this.options.svelte))\n      {\n         throw new Error(\n          'SvelteApplication - _injectHTML - A popout app with no template can only support one Svelte component.');\n      }\n\n      // Make sure the store is updated with the latest header buttons. Also allows filtering buttons before display.\n      this.updateHeaderButtons();\n\n      if (Array.isArray(this.options.svelte))\n      {\n         for (const svelteConfig of this.options.svelte)\n         {\n            const svelteData = s_LOAD_CONFIG(this, html, svelteConfig, this.#storeAppOptions, this.#storeUIOptions);\n\n            if (isApplicationShell(svelteData.component))\n            {\n               if (this.#applicationShell !== null)\n               {\n                  throw new Error(\n                   `SvelteApplication - _injectHTML - An application shell is already mounted; offending config: \n                    ${JSON.stringify(svelteConfig)}`);\n               }\n\n               this.#applicationShellHolder[0] = svelteData.component;\n            }\n\n            this.#svelteData.push(svelteData);\n         }\n      }\n      else if (typeof this.options.svelte === 'object')\n      {\n         const svelteData = s_LOAD_CONFIG(this, html, this.options.svelte, this.#storeAppOptions, this.#storeUIOptions);\n\n         if (isApplicationShell(svelteData.component))\n         {\n            // A sanity check as shouldn't hit this case as only one component is being mounted.\n            if (this.#applicationShell !== null)\n            {\n               throw new Error(\n                `SvelteApplication - _injectHTML - An application shell is already mounted; offending config: \n                 ${JSON.stringify(this.options.svelte)}`);\n            }\n\n            this.#applicationShellHolder[0] = svelteData.component;\n         }\n\n         this.#svelteData.push(svelteData);\n      }\n      // TODO EVALUATE; COMMENTED OUT WHILE WORKING ON HandlebarsApplication.\n      // else\n      // {\n      //    throw new TypeError(`SvelteApplication - _injectHTML - this.options.svelte not an array or object.`);\n      // }\n\n      // Detect if this is a synthesized DocumentFragment.\n      const isDocumentFragment = html.length && html[0] instanceof DocumentFragment;\n\n      // If any of the Svelte components mounted directly targets an HTMLElement then do not inject HTML.\n      let injectHTML = true;\n      for (const svelteData of this.#svelteData)\n      {\n         if (!svelteData.injectHTML) { injectHTML = false; break; }\n      }\n      if (injectHTML) { super._injectHTML(html); }\n\n      if (this.#applicationShell !== null)\n      {\n         this._element = $(this.#applicationShell.elementRoot);\n\n         // Detect if the application shell exports an `elementContent` accessor.\n         this.#elementContent = hasGetter(this.#applicationShell, 'elementContent') ?\n          this.#applicationShell.elementContent : null;\n\n         // Detect if the application shell exports an `elementTarget` accessor.\n         this.#elementTarget = hasGetter(this.#applicationShell, 'elementTarget') ?\n          this.#applicationShell.elementTarget : null;\n      }\n      else if (isDocumentFragment) // Set the element of the app to the first child element in order of Svelte components mounted.\n      {\n         for (const svelteData of this.#svelteData)\n         {\n            if (svelteData.element instanceof HTMLElement)\n            {\n               this._element = $(svelteData.element);\n               break;\n            }\n         }\n      }\n\n      // Potentially retrieve a specific target element if `selectorTarget` is defined otherwise make the target the\n      // main element.\n      if (this.#elementTarget === null)\n      {\n         const element = typeof this.options.selectorTarget === 'string' ?\n          this._element.find(this.options.selectorTarget) : this._element;\n\n         this.#elementTarget = element[0];\n      }\n\n      // TODO VERIFY THIS CHECK ESPECIALLY `this.#elementTarget.length === 0`.\n      if (this.#elementTarget === null || this.#elementTarget === void 0 || this.#elementTarget.length === 0)\n      {\n         throw new Error(`SvelteApplication - _injectHTML: Target element '${this.options.selectorTarget}' not found.`);\n      }\n\n      // Subscribe to local store handling. Defer to next clock tick for the render cycle to complete.\n      setTimeout(() => this.#storesSubscribe(), 0);\n\n      this.onSvelteMount({ element: this._element[0], elementContent: this.#elementContent, elementTarget:\n         this.#elementTarget });\n   }\n\n   /**\n    * Provides a mechanism to update the UI options store for minimized.\n    *\n    * Note: the sanity check is duplicated from {@link Application.maximize} and the store is updated _before_\n    * the actual parent method is invoked. This allows application shells to remove / show any resize handlers\n    * correctly.\n    *\n    * @inheritDoc\n    */\n   async maximize()\n   {\n      if (!this.popOut || [false, null].includes(this._minimized)) { return; }\n\n      this.#storeUIOptionsUpdate((options) => foundry.utils.mergeObject(options, { minimized: false }));\n\n      return super.maximize();\n   }\n\n   /**\n    * Provides a mechanism to update the UI options store for minimized.\n    *\n    * Note: the sanity check is duplicated from {@link Application.minimize} and the store is updated _before_\n    * the actual parent method is invoked. This allows application shells to remove / show any resize handlers\n    * correctly.\n    *\n    * @inheritDoc\n    */\n   async minimize()\n   {\n      if (!this.rendered || !this.popOut || [true, null].includes(this._minimized)) { return; }\n\n      this.#storeUIOptionsUpdate((options) => foundry.utils.mergeObject(options, { minimized: true }));\n\n      return super.minimize();\n   }\n\n   /**\n    * Provides a way to merge `options` into this applications options and update the appOptions store.\n    *\n    * @param {object}   options - The options object to merge with `this.options`.\n    */\n   mergeOptions(options)\n   {\n      this.#storeAppOptionsUpdate((instanceOptions) => foundry.utils.mergeObject(instanceOptions, options));\n   }\n\n   /**\n    * Provides a callback after all Svelte components are initialized.\n    *\n    * @param {object}      [opts] - Optional parameters.\n    *\n    * @param {HTMLElement} [opts.element] - HTMLElement container for main application element.\n    *\n    * @param {HTMLElement} [opts.elementContent] - HTMLElement container for content area of application shells.\n    *\n    * @param {HTMLElement} [opts.elementTarget] - HTMLElement container for main application target element.\n    */\n   onSvelteMount({ element, elementContent, elementTarget }) {} // eslint-disable-line no-unused-vars\n\n   /**\n    * Override replacing HTML as Svelte components control the rendering process. Only potentially change the outer\n    * application frame / title for pop-out applications.\n    *\n    * @inheritDoc\n    */\n   _replaceHTML(element, html)  // eslint-disable-line no-unused-vars\n   {\n      if (!element.length) { return; }\n\n      this.updateHeaderButtons();\n   }\n\n   /**\n    * Render the inner application content. Only render a template if one is defined otherwise provide an empty\n    * JQuery element.\n    *\n    * @param {Object} data         The data used to render the inner template\n    *\n    * @returns {Promise.<JQuery>}   A promise resolving to the constructed jQuery object\n    *\n    * @private\n    */\n   async _renderInner(data)\n   {\n      const html = typeof this.template === 'string' ? await renderTemplate(this.template, data) :\n       document.createDocumentFragment();\n\n      return $(html);\n   }\n\n   /**\n    * Provides a way to safely set this applications options given an accessor string which describes the\n    * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n    * to walk.\n    *\n    * Additionally if an application shell Svelte component is mounted and exports the `appOptions` property then\n    * the application options is set to `appOptions` potentially updating the application shell / Svelte component.\n    *\n    * // TODO DOCUMENT the accessor in more detail.\n    *\n    * @param {string}   accessor - The path / key to set. You can set multiple levels.\n    *\n    * @param {*}        value - Value to set.\n    */\n   setOptions(accessor, value)\n   {\n      const success = safeSet(this.options, accessor, value);\n\n      // If `this.options` modified then update the app options store.\n      if (success)\n      {\n         this.#storeAppOptionsUpdate(() => this.options);\n      }\n   }\n\n   /**\n    * Modified Application `setPosition` to support QuestTrackerApp for switchable resizable globalThis.\n    * Set the application position and store its new location.\n    *\n    * @param {object}               [opts] - Optional parameters.\n    *\n    * @param {number|null}          [opts.left] - The left offset position in pixels\n    *\n    * @param {number|null}          [opts.top] - The top offset position in pixels\n    *\n    * @param {number|null}          [opts.width] - The application width in pixels\n    *\n    * @param {number|string|null}   [opts.height] - The application height in pixels\n    *\n    * @param {number|null}          [opts.scale] - The application scale as a numeric factor where 1.0 is default\n    *\n    * @param {boolean}              [opts.noHeight] - When true no element height is modified.\n    *\n    * @param {boolean}              [opts.noWidth] - When true no element width is modified.\n    *\n    * @returns {{left: number, top: number, width: number, height: number, scale:number}}\n    * The updated position object for the application containing the new values\n    */\n   setPosition({ left, top, width, height, scale, noHeight = false, noWidth = false } = {})\n   {\n      const el = this.elementTarget;\n      const currentPosition = this.position;\n      const styles = globalThis.getComputedStyle(el);\n\n      // Update width if an explicit value is passed, or if no width value is set on the element\n      if (!el.style.width || width)\n      {\n         const tarW = width || el.offsetWidth;\n         const minW = parseInt(styles.minWidth) || MIN_WINDOW_WIDTH;\n         const maxW = el.style.maxWidth || globalThis.innerWidth;\n         currentPosition.width = width = Math.clamped(tarW, minW, maxW);\n\n         if (!noWidth) { el.style.width = `${width}px`; }\n         if ((width + currentPosition.left) > globalThis.innerWidth) { left = currentPosition.left; }\n      }\n      width = el.offsetWidth;\n\n      // Update height if an explicit value is passed, or if no height value is set on the element\n      if (!el.style.height || height)\n      {\n         const tarH = height || (el.offsetHeight + 1);\n         const minH = parseInt(styles.minHeight) || MIN_WINDOW_HEIGHT;\n         const maxH = el.style.maxHeight || globalThis.innerHeight;\n         currentPosition.height = height = Math.clamped(tarH, minH, maxH);\n\n         if (!noHeight) { el.style.height = `${height}px`; }\n         if ((height + currentPosition.top) > globalThis.innerHeight + 1) { top = currentPosition.top - 1; }\n      }\n      height = el.offsetHeight;\n\n      // Update Left\n      if ((!el.style.left) || Number.isFinite(left))\n      {\n         const tarL = Number.isFinite(left) ? left : (globalThis.innerWidth - width) / 2;\n         const maxL = Math.max(globalThis.innerWidth - width, 0);\n         currentPosition.left = left = Math.clamped(tarL, 0, maxL);\n         el.style.left = `${left}px`;\n      }\n\n      // Update Top\n      if ((!el.style.top) || Number.isFinite(top))\n      {\n         const tarT = Number.isFinite(top) ? top : (globalThis.innerHeight - height) / 2;\n         const maxT = Math.max(globalThis.innerHeight - height, 0);\n         currentPosition.top = top = Math.clamped(tarT, 0, maxT);\n         el.style.top = `${currentPosition.top}px`;\n      }\n\n      // Update Scale\n      if (scale)\n      {\n         currentPosition.scale = Math.max(scale, 0);\n         if (scale === 1) { el.style.transform = \"\"; }\n         else { el.style.transform = `scale(${scale})`; }\n      }\n\n      // Return the updated position object\n      return currentPosition;\n   }\n\n   /**\n    * Initializes the Svelte stores and derived stores for the application options and UI state.\n    *\n    * While writable stores are created the update method is stored in private variables locally and derived Readable\n    * stores are provided for essential options which are commonly used.\n    *\n    * These stores are injected into all Svelte components mounted under the `external` context: `storeAppOptions` and\n    * ` storeUIOptions`.\n    */\n   #storesInitialize()\n   {\n      const writtableAppOptions = writable(this.options);\n\n      // Keep the update function locally, but make the store essentially readable.\n      this.#storeAppOptionsUpdate = writtableAppOptions.update;\n\n      /**\n       * @type {StoreAppOptions}\n       */\n      const storeAppOptions = {\n         subscribe: writtableAppOptions.subscribe,\n\n         draggable: derived(writtableAppOptions, ($options, set) => set($options.draggable)),\n         minimizable: derived(writtableAppOptions, ($options, set) => set($options.minimizable)),\n         popOut: derived(writtableAppOptions, ($options, set) => set($options.popOut)),\n         resizable: derived(writtableAppOptions, ($options, set) => set($options.resizable)),\n         title: derived(writtableAppOptions, ($options, set) => set($options.title)),\n         zIndex: derived(writtableAppOptions,\n          ($options, set) => set(Number.isInteger($options.zIndex) ? $options.zIndex : null))\n      };\n\n      Object.freeze(storeAppOptions);\n\n      this.#storeAppOptions = storeAppOptions;\n\n      // Create a store for UI state data.\n      const writableUIOptions = writable({\n         headerButtons: [],\n         minimized: this._minimized\n      });\n\n      // Keep the update function locally, but make the store essentially readable.\n      this.#storeUIOptionsUpdate = writableUIOptions.update;\n\n      /**\n       * @type {StoreUIOptions}\n       */\n      const storeUIOptions = {\n         subscribe: writableUIOptions.subscribe,\n\n         headerButtons: derived(writableUIOptions, ($options, set) => set($options.headerButtons)),\n         minimized: derived(writableUIOptions, ($options, set) => set($options.minimized))\n      };\n\n      Object.freeze(storeUIOptions);\n\n      // Initialize the store with options set in the Application constructor.\n      this.#storeUIOptions = storeUIOptions;\n   }\n\n   /**\n    * Registers local store subscriptions for app options. `popOut` controls registering this app with `ui.windows`.\n    * `zIndex` controls the z-index style of the element root.\n    *\n    * @see SvelteApplication._injectHTML\n    */\n   #storesSubscribe()\n   {\n      // Register local subscriptions.\n      this.#storeUnsubscribe.push(this.#storeAppOptions.popOut.subscribe((value) =>\n      {\n         if (value && this.rendered)\n         {\n            ui.windows[this.appId] = this;\n         }\n         else\n         {\n            delete ui.windows[this.appId];\n         }\n      }));\n\n      // Handles directly updating the element root `z-index` style when `zIndex` changes.\n      this.#storeUnsubscribe.push(this.#storeAppOptions.zIndex.subscribe((value) =>\n      {\n         if (this._element !== null) { this._element[0].style.zIndex = value; }\n      }));\n   }\n\n   /**\n    * Unsubscribes from any locally monitored stores.\n    *\n    * @see SvelteApplication.close\n    */\n   #storesUnsubscribe()\n   {\n      this.#storeUnsubscribe.forEach((unsubscribe) => unsubscribe());\n      this.#storeUnsubscribe = [];\n   }\n\n   /**\n    * Updates the UI Options store with the current header buttons. You may dynamically add / remove header buttons\n    * if using an application shell Svelte component. In either overriding `_getHeaderButtons` or responding to the\n    * Hooks fired return a new button array and the uiOptions store is updated and the application shell will render\n    * the new buttons.\n    *\n    * Optionally you can set in the Foundry app options `headerButtonNoLabel` to true and labels will be removed from\n    * the header buttons.\n    */\n   updateHeaderButtons()\n   {\n      const buttons = this._getHeaderButtons();\n\n      // Remove labels if this.options.headerButtonNoLabel is true;\n      if (typeof this.options.headerButtonNoLabel === 'boolean' && this.options.headerButtonNoLabel)\n      {\n         for (const button of buttons) { button.label = void 0; }\n      }\n\n      this.#storeUIOptionsUpdate((options) =>\n      {\n         options.headerButtons = buttons;\n         return options;\n      });\n   }\n}\n\n/**\n * Instantiates and attaches a Svelte component to the main inserted HTML.\n *\n * @param {SvelteApplication} app - The application\n *\n * @param {JQuery}            html - The inserted HTML.\n *\n * @param {object}            config - Svelte component options\n *\n * @param {StoreAppOptions}   storeAppOptions - Svelte store for app options.\n *\n * @param {StoreUIOptions}    storeUIOptions - Svelte store for UI options.\n *\n * @returns {object} The config + instantiated Svelte component.\n */\nfunction s_LOAD_CONFIG(app, html, config, storeAppOptions, storeUIOptions)\n{\n   const svelteOptions = typeof config.options === 'object' ? config.options : {};\n\n   // TODO EVALUATE; COMMENTED OUT WHILE WORKING ON HandlebarsApplication.\n   // if (typeof app.template === 'string' && typeof config.target !== 'string')\n   // {\n   //    throw new TypeError(\n   //     `SvelteApplication - s_LOAD_CONFIG - Template defined and target selector not a string for config:\\n${\n   //      JSON.stringify(config)}`);\n   // }\n\n   let target;\n\n   if (config.target instanceof HTMLElement)       // A specific HTMLElement to append Svelte component.\n   {\n      target = config.target;\n   }\n   else if (typeof config.target === 'string')     // A string target defines a selector to find in existing HTML.\n   {\n      target = html.find(config.target).get(0);\n   }\n   else                                            // No target defined, create a document fragment.\n   {\n      target = document.createDocumentFragment();\n   }\n\n   if (target === void 0)\n   {\n      throw new Error(\n       `SvelteApplication - s_LOAD_CONFIG - could not find target selector: ${config.target} for config:\\n${\n        JSON.stringify(config)}`);\n   }\n\n   const NewSvelteComponent = config.class;\n\n   const svelteConfig = parseSvelteConfig({ ...config, target }, app);\n\n   const externalContext = svelteConfig.context.get('external');\n\n   // Inject the Foundry application instance as a Svelte prop.\n   externalContext.foundryApp = app;\n\n   // Always inject the appOptions and uiOptions stores.\n   externalContext.storeAppOptions = storeAppOptions;\n   externalContext.storeUIOptions = storeUIOptions;\n\n   let eventbus;\n\n   // Potentially inject any TyphonJS eventbus and track the proxy in the SvelteData instance.\n   if (typeof app._eventbus === 'object' && typeof app._eventbus.createProxy === 'function')\n   {\n      eventbus = app._eventbus.createProxy();\n      externalContext.eventbus = eventbus;\n   }\n\n   // Create the Svelte component.\n   const component = new NewSvelteComponent(svelteConfig);\n\n   // Set any eventbus to the config.\n   svelteConfig.eventbus = eventbus;\n\n   let element;\n\n   // We can directly get the root element from components which follow the application store contract.\n   if (isApplicationShell(component))\n   {\n      element = component.elementRoot;\n   }\n\n   // Detect if target is a synthesized DocumentFragment with an child element. Child elements will be present\n   // if the Svelte component mounts and renders initial content into the document fragment.\n   if (config.target instanceof DocumentFragment && target.firstElementChild)\n   {\n      if (element === void 0) { element = target.firstElementChild; }\n      html.append(target);\n   }\n   else if (config.target instanceof HTMLElement && element === void 0)\n   {\n      if (config.target instanceof HTMLElement && typeof svelteOptions.selectorElement !== 'string')\n      {\n         throw new Error(\n          `SvelteApplication - s_LOAD_CONFIG - HTMLElement target with no 'selectorElement' defined for config:\\n${\n           JSON.stringify(config)}`);\n      }\n\n      // The target is an HTMLElement so find the Application element from `selectorElement` option.\n      element = target.querySelector(svelteOptions.selectorElement);\n\n      if (element === null || element === void 0)\n      {\n         throw new Error(\n          `SvelteApplication - s_LOAD_CONFIG - HTMLElement target - could not find 'selectorElement' for config:\\n${\n           JSON.stringify(config)}`);\n      }\n   }\n\n   // If the configuration / original target is an HTML element then do not inject HTML.\n   const injectHTML = !(config.target instanceof HTMLElement);\n\n   const result = { config: svelteConfig, component, element, injectHTML };\n\n   Object.freeze(result);\n\n   return result;\n}\n","import { ApplicationShell }      from '@typhonjs-fvtt/svelte/component/core';\n\nimport { SvelteFormApplication } from './SvelteFormApplication.js';\n\nexport class HandlebarsFormApplication extends SvelteFormApplication\n{\n   /**\n    * Temporarily holds the original popOut value when rendering.\n    *\n    * @type {boolean}\n    */\n   #orignalPopOut;\n\n   /**\n    * @inheritDoc\n    */\n   constructor(object, options)\n   {\n      super(object, options);\n\n      if (this.popOut)\n      {\n         this.options.svelte = foundry.utils.mergeObject(typeof this.options.svelte === 'object' ?\n          this.options.svelte : {}, {\n            class: ApplicationShell,\n            intro: true,\n            target: document.body\n         });\n      }\n   }\n\n   /**\n    * Temporarily set popOut to false to only render inner HTML. This inner HTML will be appended to the content area\n    * of ApplicationShell if the original popOut value is true.\n    *\n    * @inheritDoc\n    */\n   async _render(force, options)\n   {\n      this.#orignalPopOut = this.options.popOut;\n      this.options.popOut = false;\n      await super._render(force, options);\n      this.options.popOut = this.#orignalPopOut;\n   }\n\n   /**\n    * Duplicates the FormApplication `_renderInner` method as SvelteFormApplication does not defer to super\n    * implementations.\n    *\n    * @inheritDoc\n    */\n   async _renderInner(data)\n   {\n      const html = await super._renderInner(data);\n\n      this.form = html.filter((i, el) => el instanceof HTMLFormElement)[0];\n      if (!this.form) { this.form = html.find('form')[0]; }\n\n      return html;\n   }\n\n   _injectHTML(html)\n   {\n      // Mounts any Svelte components.\n      super._injectHTML(html);\n\n      // Appends inner HTML content to application shell content element.\n      if (this.svelte?.applicationShell?.elementContent)\n      {\n         this.svelte.applicationShell.elementContent.appendChild(...html);\n      }\n   }\n\n   /**\n    * Override replacing HTML as Svelte components control the rendering process. Only potentially change the outer\n    * application frame / title for pop-out applications.\n    *\n    * @inheritDoc\n    */\n   _replaceHTML(element, html)  // eslint-disable-line no-unused-vars\n   {\n      if (!element.length) { return; }\n\n      super._replaceHTML(element, html);\n\n      if (this.svelte?.applicationShell?.elementContent)\n      {\n         const elementContent = this.svelte.applicationShell.elementContent;\n\n         // Remove existing children.\n         while (elementContent.firstChild && !elementContent.lastChild.remove()) {} // eslint-disable-line no-empty\n\n         elementContent.appendChild(...html);\n\n         // Use the setter from `SvelteFormApplication` to set the title store.\n         this.title = this.title; // eslint-disable-line no-self-assign\n      }\n      else\n      {\n         element.replaceWith(html);\n         this._element = html;\n         this.elementTarget = html[0];\n      }\n   }\n}\n"],"names":["HandlebarsApplication","SvelteApplication","constructor","options","popOut","svelte","foundry","utils","mergeObject","class","ApplicationShell","intro","target","document","body","_render","force","_injectHTML","html","applicationShell","elementContent","appendChild","_replaceHTML","element","length","firstChild","lastChild","remove","title","replaceWith","_element","elementTarget","safeAccess","data","accessor","defaultValue","access","split","cntr","safeSet","value","operation","createMissing","TypeError","Array","isArray","number","Number","isInteger","GetSvelteData","applicationShellHolder","svelteData","component","index","componentEntries","componentValues","dataEntries","entries","dataValues","values","Object","freeze","SvelteFormApplication","FormApplication","object","defaultOptions","draggable","headerButtonNoLabel","jqueryCloseAnimation","zIndex","resizable","setOptions","content","HTMLElement","close","states","Application","RENDER_STATES","RENDERED","ERROR","includes","_state","CLOSING","el","$","CLOSED","cls","_getInheritanceChain","Hooks","call","name","animate","style","minHeight","Promise","resolve","slideUp","svelteDestroyPromises","entry","push","outroAndDestroy","eventbus","config","off","all","ui","windows","appId","_minimized","_scrollPositions","storeOptions","minimized","getOptions","Error","updateHeaderButtons","svelteConfig","s_LOAD_CONFIG","isApplicationShell","JSON","stringify","isDocumentFragment","DocumentFragment","injectHTML","elementRoot","hasGetter","selectorTarget","find","setTimeout","onSvelteMount","maximize","minimize","rendered","mergeOptions","instanceOptions","_renderInner","template","renderTemplate","createDocumentFragment","success","setPosition","left","top","width","height","scale","noHeight","noWidth","currentPosition","position","styles","globalThis","getComputedStyle","tarW","offsetWidth","minW","parseInt","minWidth","MIN_WINDOW_WIDTH","maxW","maxWidth","innerWidth","Math","clamped","tarH","offsetHeight","minH","MIN_WINDOW_HEIGHT","maxH","maxHeight","innerHeight","isFinite","tarL","maxL","max","tarT","maxT","transform","buttons","_getHeaderButtons","button","label","headerButtons","writtableAppOptions","writable","update","storeAppOptions","subscribe","derived","$options","set","minimizable","writableUIOptions","storeUIOptions","forEach","unsubscribe","app","svelteOptions","get","NewSvelteComponent","parseSvelteConfig","externalContext","context","foundryApp","_eventbus","createProxy","firstElementChild","append","selectorElement","querySelector","result","HandlebarsFormApplication","form","filter","i","HTMLFormElement"],"mappings":"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I,GAAG,CAAhB,EAAmBA,IAAI,GAAG,2CAAiBd,MAA3C,EAAmDc,IAAI,EAAvD,EACA;AACG,YAAM,CAACA,IAAD,EAAO,2CAAiBA,IAAjB,EAAuBc,SAA9B,CAAN;AACF;AACH;AAED;AACH;AACA;AACA;AACA;AACA;;;AACmB,GAAfG,eAAe,GAChB;AACG,SAAK,IAAIjB,IAAI,GAAG,CAAhB,EAAmBA,IAAI,GAAG,2CAAiBd,MAA3C,EAAmDc,IAAI,EAAvD,EACA;AACG,YAAM,2CAAiBA,IAAjB,EAAuBc,SAA7B;AACF;AACH;AAED;AACH;AACA;AACA;AACA;AACA;AACA;;;AACGnB,EAAAA,IAAI,CAACoB,KAAD,EACJ;AACG,WAAO,2CAAiBA,KAAjB,CAAP;AACF;AAED;AACH;AACA;AACA;AACA;;;AACGG,EAAAA,WAAW,GACX;AACG,WAAO,2CAAiBC,OAAjB,EAAP;AACF;AAED;AACH;AACA;AACA;AACA;;;AACGC,EAAAA,UAAU,GACV;AACG,WAAO,2CAAiBC,MAAjB,EAAP;AACF;;AAES,MAANnC,MAAM,GACV;AACG,WAAO,2CAAiBA,MAAxB;AACF;;AA3GJ;;AA8GAoC,MAAM,CAACC,MAAP,CAAcZ,aAAd;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtHA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACO,MAAMa,qBAAN,SAAoCC,eAApC,CACP;AACG;AACH;AACA;AACA;AACA;;AAGG;AACH;AACA;AACA;AACA;;AAGG;AACH;AACA;AACA;AACA;;AAGG;AACH;AACA;AACA;AACA;;AAGG;AACH;AACA;AACA;AACA;;AAGG;AACH;AACA;AACA;AACA;;AAGG;AACH;AACA;AACA;AACA;;AAGG;AACH;AACA;AACA;AACA;;AAGG;AACH;AACA;AACA;AACA;;AAGG;AACH;AACA;AACA;AACA;;AAGG;AACH;AACA;AACA;AACA;AACA;;AAGG;AACH;AACA;AACG7D,EAAAA,WAAW,CAAC8D,MAAD,EAAS7D,OAAT,EACX;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"}